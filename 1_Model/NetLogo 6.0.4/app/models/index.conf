models.indexes = [
  { path: """models/3D/Sample Models/Mousetraps 3D.nlogo3d""", info: """<p>This is a 3D version of the Mousetraps model. Imagine a gymnasium full of mousetraps.  On each mousetrap is a ping pong ball.  Now throw a single ping pong ball into the middle of the room. The ball lands on a trap, the trap triggers, and a second ball flies into the air.  The first ball also bounces into the air again, so now there are two balls in the air.  Each of those two balls triggers another trap, so there&rsquo;s four balls in the air. And so on&hellip;</p>
""" },
  { path: """models/3D/Sample Models/Rope 3D.nlogo3d""", info: """<p>This project simulates a wave moving along a rope.  One end of the rope is green, and the other is blue.  The ends of the rope may be driven in sinusoidal motion (along the y and z axes), causing wave patterns to travel along the rope.  This creates a wave that travels along the rope.</p>
""" },
  { path: """models/3D/Sample Models/Flocking 3D Alternate.nlogo3d""", info: """<p>This is a vector-based 3D flocking model, based on Jon Klein&rsquo;s implementation of Craig Reynolds&rsquo; Boids algorithm. Each bird is influenced by a series of urges. By assigning different weights to each urge, the birds exhibit different flocking behaviors.</p>
""" },
  { path: """models/3D/Sample Models/DLA 3D.nlogo3d""", info: """<p>This is a 3D version of the 2D model DLA. This model demonstrates diffusion-limited aggregation, in which randomly moving (diffusing) particles stick together (aggregate) to form beautiful treelike branching fractal structures.  There are many patterns found in nature that resemble the patterns produced by this model: crystals, coral, fungi, lightning, and so on.</p>
""" },
  { path: """models/3D/Sample Models/GasLab/GasLab Free Gas 3D.nlogo3d""", info: """<p>This model is a 3D version of the 2D model GasLab Free Gas; it is one in a series of GasLab models.  They use the same basic rules for simulating the behavior of gases.  Each model integrates different features in order to highlight different aspects of gas behavior.</p>
""" },
  { path: """models/3D/Sample Models/GasLab/GasLab Two Gas 3D.nlogo3d""", info: """<p>This model is a 2D version of the 3D model GasLab Two Gas; it is one in a series of GasLab models.  They use the same basic rules for simulating the behavior of gases.  Each model integrates different features in order to highlight different aspects of gas behavior.</p>
""" },
  { path: """models/3D/Sample Models/GasLab/GasLab Single Collision 3D.nlogo3d""", info: """<p>This model is a 3D version of the 2D model GasLab Single Collision; it is one in a series of GasLab models. They use the same basic rules for simulating the behavior of gases. Each model integrates different features in order to highlight different aspects of gas behavior.</p>
""" },
  { path: """models/3D/Sample Models/Fireworks 3D.nlogo3d""", info: """<p>This program models the action of fireworks.  Rockets begin at the bottom of the world, shoot upwards into the sky and then explode, emitting showers of falling sparks.</p>
""" },
  { path: """models/3D/Sample Models/Surface Walking 3D.nlogo3d""", info: """<p>This model is a 3D version of a surface-walking algorithm used in &ldquo;Surface Walk 2D&rdquo;. Turtles approximate a user-defined surface using a simple algorithm that considers the turtle&rsquo;s current position relative to neighboring surface patches.</p>
""" },
  { path: """models/3D/Sample Models/Sandpile 3D.nlogo3d""", info: """<p>This model illustrates a phenomenon known as self-organized criticality. The world is filled with sand organized in columns. Falling sand stacks on top of the sand that is already there. Eventually a column will fall over because it gets too high, and the sand will spill into the surrounding area. This is called a cascade. When a falling column causes other columns to fall, the series of cascades is called an avalanche.  The size of an avalanche is the number of cascades that occur from one grain of sand falling.</p>
""" },
  { path: """models/3D/Sample Models/Sand 3D.nlogo3d""", info: """<p>This is a model of how sand particles interact with each other.  The sand particles move according to the following rules:</p>
""" },
  { path: """models/3D/Sample Models/Termites 3D.nlogo3d""", info: """<p>This is a 3D version of the Termites model. This project is inspired by the behavior of termites gathering wood chips into piles. The termites follow a set of simple rules. Each termite starts wandering randomly. If it bumps into a wood chip, it picks the chip up, and continues to wander randomly. When it bumps into another wood chip, it finds a nearby empty space and puts its wood chip down.  With these simple rules, the wood chips eventually end up in a single pile.</p>
""" },
  { path: """models/3D/Sample Models/Preferential Attachment 3D.nlogo3d""", info: """<p>This is a 3D version of the NetLogo model Preferential Attachment. In some networks, a few &ldquo;hubs&rdquo; have lots of connections, while everybody else only has a few.  This model shows one way such networks can arise.</p>
""" },
  { path: """models/3D/Sample Models/Hydrogen Diffusion 3D.nlogo3d""", info: """<p>This model simulates hydrogen diffusion through a lattice, in particular, hydrogen desorption from solid state hydrides. These hydrides are hydrogen storage materials that absorb hydrogen at high pressures, and release hydrogen at high temperatures.</p>
""" },
  { path: """models/3D/Sample Models/Raindrops 3D.nlogo3d""", info: """<p>This is a 3D version of the 2D model Raindrops, it simulates raindrops falling on the surface of a pond and the waves they produce.</p>
""" },
  { path: """models/3D/Sample Models/Tree Simple 3D.nlogo3d""", info: """<p>This is a 3D version of the 2D model Tree Simple. This model draws special types of pictures called fractals.  A fractal is a shape that is self-similar - that is, it looks the same no matter how closely you zoom in or out.  For instance, a tree can be thought of as a fractal since if you look at the tree as a whole, you see a stick, that is to say the trunk, with branches coming out of it.  Then if you look at a smaller portion of it, say a branch, you see a similar thing, namely, a stick with branches coming out of it.</p>
""" },
  { path: """models/3D/Sample Models/Sierpinski Simple 3D.nlogo3d""", info: """<p>This is a 3D version of the Sierpinski Simple model in the NetLogo Models Library. The fractal that this model produces was discovered by the great Polish mathematician Waclaw Sierpinski in 1916.  Sierpinski was a professor at Lvov and Warsaw.  He was one of the most influential mathematicians of his time in Poland and had a worldwide reputation.  In fact, one of the moon&rsquo;s craters is named after him.</p>
""" },
  { path: """models/3D/Sample Models/Sunflower 3D.nlogo3d""", info: """<p>This is a 3D version of the Sunflower model in the NetLogo Models Library. The interlocking spirals found in the seeds, petals and even branches of many plants occur naturally through the growth of the flower.  This model attempts to demonstrate the growth of these naturally occurring spirals.</p>
""" },
  { path: """models/3D/Sample Models/Flocking 3D.nlogo3d""", info: """<p>This is a 3D version of the Flocking model in the NetLogo Models Library. This model is an attempt to mimic the flocking of birds.  (The resulting motion also resembles schools of fish.)  The flocks that appear in this model are not created or led in any way by special leader birds.  Rather, each bird is following exactly the same set of rules, from which flocks emerge.</p>
""" },
  { path: """models/3D/Sample Models/Life 3D.nlogo3d""", info: """<p>This program is an example of a three-dimensional cellular automaton, it is a 3D version of the Life model. A cellular automaton is a computational machine that performs actions based on certain rules.  It can be thought of as a world which is divided into cubic cells.  Each cell can be either &ldquo;alive&rdquo; or &ldquo;dead.&rdquo;  This is called the &ldquo;state&rdquo; of the cell.  According to specified rules, each cell will be alive or dead at the next time step.</p>
""" },
  { path: """models/3D/Sample Models/Percolation 3D.nlogo3d""", info: """<p>This model is a 3D version of the 2D model Percolation. It shows how an oil spill can percolate down through permeable soil.  It was inspired by a similar model meant to be done by hand on graph paper (see &ldquo;Forest Fires, Oil Spills, and Fractal Geometry&rdquo;, Mathematics Teacher, Nov. 1998, p. 684-5).</p>
""" },
  { path: """models/3D/Sample Models/Follower 3D.nlogo3d""", info: """<p>This is a 3D version of the Follower model found in the Art section of the Sample Models. In Follower, turtles attempt to &ldquo;connect&rdquo; with other turtles, forming long chains according to a small set of simple rules.</p>
""" },
  { path: """models/3D/Sample Models/Wave Machine 3D.nlogo3d""", info: """<p>This is a 3D version of the 2D model Wave Machine. This model simulates wave motion in a membrane. The four edges of the membrane are fixed to a frame. A green rectangular area represents a driver plate that moves up and down, exhibiting sinusoidal motion.</p>
""" },
  { path: """models/3D/Code Examples/Shapes Example 3D.nlogo3d""", info: """<p>This code example shows all of the 3D shapes currently available in NetLogo 3D.</p>
""" },
  { path: """models/3D/Code Examples/Trails Example 3D.nlogo3d""", info: """<p>This code example shows how to use turtles to draw lines that trace a turtle&rsquo;s trajectory.</p>
""" },
  { path: """models/3D/Code Examples/Uniform Distribution on a Sphere Example 3D.nlogo3d""", info: """<p>This code example demonstrates the correct way to uniformly distribute turtles on the surface of a sphere. Note that simply setting the heading and pitch to random numbers between 0 and 360 results in a non-uniform distribution with clustering at the poles in the z direction.  The solution in <code>setup-uniform</code> is based on information found here:</p>
""" },
  { path: """models/3D/Code Examples/Spherical Path Example 3D.nlogo3d""", info: """<p>This shows how to make turtles move along a perfect sphere. The first procedure moves turtles based a user-defined distance to be travelled; the second moves then based on a user-defined degree measure.</p>
""" },
  { path: """models/3D/Code Examples/Hill Climbing Example 3D.nlogo3d""", info: """<p>This example shows make a terrain in 3D and move turtles across the terrain. This is much like the Hill Climbing Example in 2D.  However, the elevation variation in the terrain is visible in the 3D space.</p>
""" },
  { path: """models/3D/Code Examples/Bouncing Balls Example 3D.nlogo3d""", info: """<p>This is an example that displays many of the capabilities of NetLogo 3D.</p>
""" },
  { path: """models/3D/Code Examples/Neighborhoods Example 3D.nlogo3d""", info: """<p>This is a 3D version of the 2D model Neighborhoods Example This code example shows how to use the basic 2D and 3D neighborhood primitives in a 3D world.  These include <code>neighbors</code>, <code>neighbors6</code>, <code>in-radius</code>, and <code>at-points</code>:</p>
""" },
  { path: """models/3D/Code Examples/Turtle Dance Example 3D.nlogo3d""", info: """<p>This is a simple Code Example to help new users understand how turtles move in 3D space.  On each tick each turtle will move forward, turn left and pitch up.</p>
""" },
  { path: """models/3D/Code Examples/Three Loops Example 3D.nlogo3d""", info: """<p>This model shows three turtles moving around in NetLogo 3D. The gray turtle is changing only pitch and moving forward, the red turtle is changing only roll, and the orange turtle is changing pitch, roll, and heading as it is using right3d.</p>
""" },
  { path: """models/3D/Code Examples/Turtle and Observer Motion Example 3D.nlogo3d""", info: """<p>This model lets you explore turtle orientation in a 3D world.</p>
""" },
  { path: """models/3D/Code Examples/Airplane Landing Example 3D.nlogo3d""", info: """<p>This model is an animation of an airplane landing at an airport.</p>
""" },
  { path: """models/3D/Code Examples/Turtle Perspective Example 3D.nlogo3d""", info: """<p>This is an example that demonstrates changing perspectives in NetLogo 3D.</p>
""" },
  { path: """models/3D/Code Examples/Network Example 3D.nlogo3d""", info: """<p>This is a 3D version of the 2D model Network Example. The only significant difference from the 2D code is that we spread the nodes around the world in 3D space.</p>
""" },
  { path: """models/HubNet Activities/Tragedy of the Commons HubNet.nlogo""", info: """<p>This model simulates the utilization of a common resource by multiple users.  In this example, the common resource is represented by the common grazing area, used by goat farmers to feed their goats.  Depending on the actions of the participants, the outcome may demonstrate a phenomenon called the &ldquo;tragedy of the commons&rdquo;, where a common good or resource is over-utilized.</p>
""" },
  { path: """models/HubNet Activities/Root Beer Game HubNet.nlogo""", info: """<p>This is an adaptation of a popular game created at MIT in the early 1960s that shows how small delays in a distribution system can create big problems.  The participants take on one of four roles in a distribution network for root beer &ndash; the factory, the distributor, the wholesaler, or the retailer.  Each participant places and ships orders while trying to keep their costs to minimum. Costs include the holding inventory as well as missing out on sales because you produced too little root beer.</p>
""" },
  { path: """models/HubNet Activities/Sampler HubNet.nlogo""", info: """<p>Sampler is a HubNet Participatory Simulation in statistics. It is part of the ProbLab curricular models. Students engage in statistical analysis as individuals and as a classroom. Through these activities, students discover the meaning and use of basic concepts in statistics.</p>
""" },
  { path: """models/HubNet Activities/Polling HubNet.nlogo""", info: """<p>This model can be used to poll data from a set of students using HubNet Clients.  The teacher can input questions to ask and then the students can input their choice in response to the question.  The collective data can then be plotted.</p>
""" },
  { path: """models/HubNet Activities/Dice Stalagmite HubNet.nlogo""", info: """<p>Dice Stalagmite HubNet is a Participatory Simulation Activity (PSA) in probability for exploring dependent and independent events.  Specifically, you compare the outcome distribution of a compound event, the sum of two randomly &ldquo;rolled&rdquo; dice, to the outcome distribution of independent events, the values of these same dice, taken one die at a time.</p>
""" },
  { path: """models/HubNet Activities/Bug Hunters Camouflage HubNet.nlogo""", info: """<p>This is a HubNet activity of natural/artificial selection that shows how a population hunted by a predator can develop camouflaging.  For example, in a forest with green leaves, green bugs may emerge as the predominant bug color.</p>
""" },
  { path: """models/HubNet Activities/Disease Doctors HubNet.nlogo""", info: """<p>This model is a modified version of the Disease activity which, simulates the spread of a disease through a population.  In this version the population can consist of students, which are turtles controlled by individual students via the HubNet Client, androids, infectable turtles controlled by the computer and doctors, un-infectable turtles that can heal other turtles.  Doctors do not exist in the Disease activity.</p>
""" },
  { path: """models/HubNet Activities/Disease HubNet.nlogo""", info: """<p>This model simulates the spread of a disease through a population.  This population can consist of either students, which are turtles controlled by individual students via the HubNet Client, or turtles that are generated and controlled by NetLogo, called androids, or both androids and students.</p>
""" },
  { path: """models/HubNet Activities/Gridlock HubNet.nlogo""", info: """<p>Students control traffic lights in a real-time traffic simulation.  The teacher controls overall variables, such as the speed limit and the number of cars.  This allows students to explore traffic dynamics, which can lead into many areas of study, from calculus to social studies.</p>
""" },
  { path: """models/HubNet Activities/Unverified/Predator Prey Game HubNet.nlogo""", info: """<p>This model simulates a predator-prey relationship.  The population consists of wolf packs (predators) and sheep herds (prey), some controlled by students via HubNet clients and some androids controlled by the computer.  The wolves gain energy from consuming sheep, and the sheep gain energy from consuming grass (a primary producer).  The model allows students to examine simple population dynamics like those modeled through the Lotka-Volterra equations in a participatory way.</p>
""" },
  { path: """models/HubNet Activities/Unverified/Oil Cartel Alternate HubNet.nlogo""", info: """<p>This activity explores the economics of a market with imperfect competition. As members of a cartel, participants experience how jointly determined price and quantity decisions can be advantageous to suppliers and harmful to consumers, but also why a cartel is so difficult to sustain. In this alternate version of Oil Cartel, members can also explicitly make investments to detect and penalize other members who &ldquo;cheat&rdquo; on their agreement, in order to explore the role of accurate information in maintaining a cartel.</p>
""" },
  { path: """models/HubNet Activities/Unverified/Walking HubNet.nlogo""", info: """<p>Each student defines the motion of a walking character by setting its velocity on their client over time intervals.  The students have 9 different intervals for which they can set the velocity.  They can then send these velocities to their characters, where they see the character walking its route over the 9 intervals.  This is designed to help students understand the accumulation of distance as a function of time. This can serve as a jumping off point for advanced concepts ranging from derivatives and integrals to wave mechanics.</p>
""" },
  { path: """models/HubNet Activities/Unverified/Function HubNet.nlogo""", info: """<p>In this activity students can explore functions.  Each student controls one point in the function.  The activity supports several different kinds of exploration, with open ended possibilities for learning.</p>
""" },
  { path: """models/HubNet Activities/Unverified/Polling Advanced HubNet.nlogo""", info: """<p>This model can be used to poll data from a set of students using HubNet Clients.  The teacher can input questions to ask and then the students can input their numerical choice (from 0 to 50) in response to the question.  The collective data can then be plotted.</p>
""" },
  { path: """models/HubNet Activities/Unverified/Public Good HubNet.nlogo""", info: """<p>Public Good is a game that asks each of the players to contribute to a common pool that will then be multiplied by the game leader and redistributed to all players.</p>
""" },
  { path: """models/HubNet Activities/Unverified/PANDA BEAR HubNet.nlogo""", info: """<p>Perimeters and Areas by Embodied Agent Reasoning, or PANDA BEAR, is a microworld for mathematics learning that lies at the intersection of dynamic geometry environments and participatory simulation activities. In PANDA BEAR, individual students identify with and control a single vertex of a shared, group-polygon.</p>
""" },
  { path: """models/HubNet Activities/Unverified/Investments HubNet.nlogo""", info: """<p>This model is a simple activity designed to teach compound interest.  Students have a choice between investing their money with a teacher-controlled interest rate or using their money to purchase a car at a teacher defined price.</p>
""" },
  { path: """models/HubNet Activities/Unverified/Gridlock Alternate HubNet.nlogo""", info: """<p>Students control traffic lights in a real-time traffic simulation.  The teacher controls overall variables, such as the speed limit and the number of cars.  This allows students to explore traffic dynamics, which can lead into many areas of study, from calculus to social studies. This alternate version of the Gridlock HubNet model allows the client to send NetLogo code to the model to be run and produce values which can then be plotted in the a client plot.</p>
""" },
  { path: """models/HubNet Activities/Unverified/Guppy Spots HubNet.nlogo""", info: """<p>This selection model shows how sexual attraction and predation change the coloration and patterns in guppy&rsquo;s population.</p>
""" },
  { path: """models/HubNet Activities/Unverified/Prisoners Dilemma HubNet.nlogo""", info: """<p>This model is a HubNet version of the Prisoner&rsquo;s Dilemma.  The Prisoner&rsquo;s Dilemma is a famous game-theory situation that models the costs and benefits of collaboration or treason between free agents where there is a struggle over some capital.</p>
""" },
  { path: """models/HubNet Activities/Unverified/Restaurants HubNet.nlogo""", info: """<p>This simulates the competition in a a single industry, in this case the restaurant industry. Each restaurant is controlled by an owner trying to maximize profit. Depending on the owners&rsquo; decisions, the outcome may demonstrate the Efficient Market Theorem (&ldquo;Pareto efficiency&rdquo;): if all the agents within a market look out for their own best interest, it will lead to the most efficient outcome. In this case it means that if the restaurant owners try to maximize their own wealth it will also maximize the customer satisfaction.</p>
""" },
  { path: """models/HubNet Activities/Minority Game HubNet.nlogo""", info: """<p>Minority Game is a simplified model of an economic market.  In each round agents choose to join one of two sides, 0 or 1. Those on the minority side at the end of a round earn a point.  This game is inspired by the &ldquo;El Farol&rdquo; bar problem.</p>
""" },
  { path: """models/HubNet Activities/Memory HubNet.nlogo""", info: """<p>This is a HubNet version of the classic card game Memory. The game tests players&rsquo; short term memory of where they last saw an image appear. Players can test different mental strategies for remembering.</p>
""" },
  { path: """models/HubNet Activities/Code Examples/Client Overrides Example HubNet.nlogo""", info: """<p>This example demonstrates how to use overrides in HubNet.</p>
""" },
  { path: """models/HubNet Activities/Code Examples/Client Perspective Example HubNet.nlogo""", info: """<p>This example demonstrates client perspectives: specifically, HUBNET-SEND-FOLLOW, HUBNET-SEND-WATCH, and HUBNET-RESET-PERSPECTIVE.  These mirror FOLLOW, WATCH, and RESET-PERSPECTIVE, however, they only affect the view on the given client.</p>
""" },
  { path: """models/HubNet Activities/Code Examples/Template HubNet.nlogo""", info: """<p>This template contains code that can serve as a starting point for creating new HubNet activities. It shares many of the basic procedures used by other HubNet activities, which are required to connect to and communicate with clients in Disease-like activities.</p>
""" },
  { path: """models/HubNet Activities/BeeSmart HubNet.nlogo""", info: """<p>BeeSmart HubNet model is part of the BeeSmart Curricular Unit. It is the HubNet version of the BeeSmart Hive Finding model in NetLogo Models library. For detailed description of honeybees hive finding phenomenon, please see the info tab of the BeeSmart Hive Finding model.</p>
""" },
  { path: """models/HubNet Activities/Bug Hunters Adaptations HubNet.nlogo""", info: """<p>This is a HubNet activity of natural selection that shows how a population hunted by a predator can develop camouflaging. It can shows how a population can become progressively more garish in appearance, when sexual selection is the prevalent selective pressure on the population.</p>
""" },
  { path: """models/Alternative Visualizations/Ethnocentrism - Alternative Visualization.nlogo""", info: """<p>This model, due to Robert Axelrod and Ross A. Hammond, suggests that &ldquo;ethnocentric&rdquo; behavior can evolve under a wide variety of conditions, even when there are no native &ldquo;ethnocentrics&rdquo; and no way to differentiate between agent types.  Agents compete for limited space via Prisoner Dilemma&rsquo;s type interactions. &ldquo;Ethnocentric&rdquo; agents treat agents within their group more beneficially than those outside their group.  The model includes a mechanism for inheritance (genetic or cultural) of strategies. This version is an alternate visualization of the model.</p>
""" },
  { path: """models/Alternative Visualizations/Flocking - Alternative Visualizations.nlogo""", info: """<p>This model is a version of the NetLogo Flocking model that adds visualizations.</p>
""" },
  { path: """models/Alternative Visualizations/Virus - Alternative Visualization.nlogo""", info: """<p>This model simulates the transmission and perpetuation of a virus in a human population. This version includes alternative visualizations of the model.</p>
""" },
  { path: """models/Alternative Visualizations/Heat Diffusion - Alternative Visualization.nlogo""", info: """<p>This model simulates transient and steady-state temperature distribution of a thin plate. This version of the model uses a more intuitive visualization of the gradient of heat than the original model.</p>
""" },
  { path: """models/Alternative Visualizations/Virus - Circle Visualization.nlogo""", info: """<p>This model simulates the transmission and perpetuation of a virus in a human population. The circle visualization in this model makes it easier to see when agents interact.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Kicked Rotators.nlogo""", info: """<p>This model simulates a collection of <a href="https://en.wikipedia.org/wiki/Kicked_rotator" target="_blank">kicked rotators</a> operating simultaneously and graphs their trajectories. This graph shows a divided phase space where integrable islands of stability are surrounded by a chaotic component (aka &ldquo;chaotic sea&rdquo;). This is what&rsquo;s called the <a href="http://www.scholarpedia.org/article/Chirikov_standard_map" target="_blank">Chirikov standard</a> map, a tool in physics that can be used to describe many different dynamical systems from the motion of particles in accelerators to comet dynamics in solar systems.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/GasLab Single Collision.nlogo""", info: """<p>This is one in a series of GasLab models that use the same basic rules for what happens when particles run into each other. Each one has different features in order to show different aspects of the behavior of gases.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/GasLab Two Gas.nlogo""", info: """<p>This model simulates the behavior of two different types of gas particles in a box with a partitioning wall. Part or all of the wall can be removed, allowing the particles to mix together. It was one of the original CM StarLogo applications (under the name GPCEE) and is now ported to NetLogo as part of the Connected Mathematics &ldquo;Making Sense of Complex Phenomena&rdquo; Modeling Project.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/GasLab Circular Particles.nlogo""", info: """<p>This model is one in a series of GasLab models. They use the same basic rules for simulating the behavior of gases.  Each model integrates different features in order to highlight different aspects of gas behavior. This model is different from the other GasLab models in that the collision calculations take the circular shape and size of the particles into account, instead of modeling the particles as dimensionless points.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/GasLab Free Gas.nlogo""", info: """<p>This model is the simplest gas model in the suite of GasLab models.  The particles are moving and colliding with each other with no external constraints, such as gravity or containers. In this model, particles are modeled as perfectly elastic ones with no energy except their kinetic energy &ndash; which is due to their motion.  Collisions between particles are elastic.  Particles are colored according to their speed &ndash; blue for slow, green for medium, and red for high.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/GasLab Maxwells Demon.nlogo""", info: """<p>This model illustrates a famous thought experiment, which raised important issues about the nature of entropy.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/GasLab Isothermal Piston.nlogo""", info: """<p>This model simulates the behavior of gas particles in a piston, or a container with a changing volume.  The volume in which the gas is contained can be changed by moving the piston in and out.  &ldquo;Isothermal&rdquo; means that the temperature of the gas is not changed by moving the piston.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/GasLab Gravity Box.nlogo""", info: """<p>This model simulates the effect of gravity on gas particles.  It is very similar to GasLab Atmosphere, but with a &ldquo;ceiling&rdquo; over the gas, so particles can never escape.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/Unverified/GasLab Pressure Box.nlogo""", info: """<p>This model simulates the behavior of gas particles trapped in a container with a fixed volume, such as inflating a bike tire.  The number of particles in the box can be changed by adding particles through a valve on the side.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/Unverified/GasLab Heat Box.nlogo""", info: """<p>This model is illustrates the relationship between temperature and pressure in a fixed volume gas container.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/Unverified/GasLab Moving Piston.nlogo""", info: """<p>This model simulates the behavior of gas particles as the volume changes. In this model, the volume is slowly changing over time by a piston that is rising and falling.  As the piston lowers, the volume of the box decreases and as the piston rises, the volume of the box increases.  This systematic motion of the piston does no work on the particles inside the box.  The piston only serves a mechanism to change the volume of the box.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/Unverified/GasLab Second Law.nlogo""", info: """<p>This model simulates the Second Law of Thermodynamics via the behavior of gas particles in a box. The Second Law of Thermodynamics states that systems tend towards increased entropy.  Essentially what this means is that over time ordered systems become less ordered unless work is done on the system to keep it ordered.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/GasLab Gas in a Box.nlogo""", info: """<p>This model simulates the behavior of gas particles in a closed box, or a container with a fixed volume.  The path of single particle is visualized by a gray colored trace of the particle&rsquo;s most recent positions.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/GasLab Adiabatic Piston.nlogo""", info: """<p>This model simulates the behavior of gas particles in a box with a movable piston. The piston has weight which pushes it down, and the gas particles push upward against the piston when they collide with it. &ldquo;Adiabatic&rdquo; means &ldquo;without loss or gain of heat&rdquo;.  In this model, no heat energy (such as heat loss through the walls of the box) is added to or removed from the system.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/GasLab/GasLab Atmosphere.nlogo""", info: """<p>In this model, a gaseous atmosphere is placed above the surface of a &ldquo;planet&rdquo;, represented by a yellow line at the bottom of the world.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Heat/Boiling.nlogo""", info: """<p>This project depicts a simple cellular automata model that resembles a pot of boiling water. Heat is applied evenly to the entire pot, but when the temperature of a patch reaches the boiling temperature, the bubble pops and that patch&rsquo;s temperature drops to zero.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Heat/Unverified/Thermostat.nlogo""", info: """<p>A thermostat is a device that responds to the temperature of a room in order to maintain the temperature at some desired level.  This is often used as an example of feedback control, where a system adjusts its behavior in response the effects of its prior behavior.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Heat/Unverified/Heat Diffusion.nlogo""", info: """<p>This model simulates transient and steady-state temperature distribution of a thin plate.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Radioactivity/Unverified/Reactor X-Section.nlogo""", info: """<p>This project simulates a nuclear fission reaction in a nuclear power plant. In a fission reaction, free neutrons hit uranium atoms, causing each uranium atom to generate 2 or 3 neutrons and a unit of energy. The uranium atom itself splits into two smaller atoms. The newly generated neutrons, together with the neutron that caused the reaction, keep moving and continue to hit more uranium atoms, which release more neutrons, etc.  This is the chain reaction that happens inside an atomic bomb.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Radioactivity/Unverified/Reactor Top Down.nlogo""", info: """<p>This project simulates a nuclear fission reaction in a nuclear power plant. In a fission reaction, free neutrons hit uranium atoms, causing each uranium atom to generate 2 or 3 neutrons and a unit of energy. The uranium atom itself splits into two smaller atoms. The newly generated neutrons, together with the neutron that caused the reaction, keep moving and continue to hit more uranium atoms, which release more neutrons, etc. This is the chain reaction that happens inside an atomic bomb.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Radioactivity/Decay.nlogo""", info: """<p>This model simulates the spontaneous decay of a collection of radioactive nuclei.  As they decay and become stable, the plot of the number that are still radioactive demonstrates the notion of &ldquo;half-life&rdquo;.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Turbulence.nlogo""", info: """<p>This model demonstrates the transition from order, or &ldquo;laminarity&rdquo;, to disorder, or &ldquo;turbulence&rdquo; in fluids.  Using a one-dimensional continuous cellular automaton, this model allows you to explore the relationship between turbulence, laminarity, and the viscosity of a fluid flowing through a &ldquo;pipe.&rdquo; It also shows you how the roughness of pipes in which the fluid travels through affects the fluid&rsquo;s behavior.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Chemical Reactions/Enzyme Kinetics.nlogo""", info: """<p>This model demonstrates the kinetics of single-substrate enzyme-catalysis. The interactions between enzymes and substrates are often difficult to understand and the model allows users to visualize the complex reaction.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Chemical Reactions/Simple Kinetics 3.nlogo""", info: """<p>This model follows on the Simple Kinetics 2 model.  In Simple Kinetics 2, we saw how changes to variables such as temperature, volume, and concentration affected the rate at which a chemical reaction reached an equilibrium state.  Here we model the same phenomenon based upon a physical separation.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Chemical Reactions/Simple Kinetics 1.nlogo""", info: """<p>This model demonstrates the kinetics of a simple reversible reaction. It demonstrates numerically that the application of the Principle of Stationary Concentrations is valid in this case.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Chemical Reactions/Chemical Equilibrium.nlogo""", info: """<p>This model shows how a simple chemical system comes to different equilibrium states depending on the concentrations of the initial reactants. Equilibrium is the term we use to describe a system in which there are no macroscopic changes.  This means that the system &ldquo;looks&rdquo; like nothing is happening.  In fact, in all chemical systems atomic-level processes continue but in a balance that yields no changes at the macroscopic level.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Chemical Reactions/B-Z Reaction.nlogo""", info: """<p>The Belousov-Zhabotinsky reaction (or B-Z reaction for short) is an unusual chemical reaction.  Instead of steadily moving towards a single equilibrium state, it oscillates back and forth between two such states.  Before this &ldquo;chemical oscillator&rdquo; was discovered, it was thought that such a reaction could not exist.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Chemical Reactions/Simple Kinetics 2.nlogo""", info: """<p>This model demonstrates the properties of LeChatelier&rsquo;s Principle. This chemical principle states that if a system that is at equilibrium is perturbed, the system will readjust to establish a new equilibrium. For example, if you add reactants to a reversible reaction that is at equilibrium, the system will shift to generate more products and establish a new equilibrium. The principle can also be described with chemical equations.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Chemical Reactions/Radical Polymerization.nlogo""", info: """<p>This model explains kinetics of radical polymerization.  Radical polymerization can be thought of as the process of agglomeration of small molecules (monomers) into chains (polymer chains) initiated by active particles (radicals).</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Chemical Reactions/Acids and Bases/Buffer.nlogo""", info: """<p>This model demonstrates the behavior of a buffered solution.  A buffer is a solution that resists change in pH when either acid or base are added into it, within limits.  It is best viewed as the third model in the ACID-BASE package.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Chemical Reactions/Acids and Bases/Weak Acid.nlogo""", info: """<p>This model demonstrates the differences in the calculation of pH when evaluating a weak acid in solution. It is best viewed as the second model in the ACID-BASE package.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Chemical Reactions/Acids and Bases/Strong Acid.nlogo""", info: """<p>This model demonstrates how chemists and biologists measure the pH of a solution. The value of pH, like many other chemical measurements, emerges from the interactions and relative ratios of the composite molecules within a solution.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Chemical Reactions/Acids and Bases/Unverified/Diprotic Acid.nlogo""", info: """<p>This is the fourth model of the Acid-Base subsection of the Connected Chemistry models. It is best explored after the Strong Acid, Weak Acid, and Buffer models. In this model, we have yet another variant on determining the pH of a solution.  This model depicts a diprotic acid, or an acid which can donate two atoms of hydrogen to a base.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Chaos in a Box.nlogo""", info: """<p>This model demonstrates a very simple chaotic system consisting of a ball bouncing inside a rectangular room with circular obstacles in it. The system can exhibit periodic behavior (in which the ball bounces in a repeating pattern), but primarily exhibits chaotic behavior.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Polymer Dynamics.nlogo""", info: """<p>This model simulates the motion of a simple polymer.  Polymers are simply long chains of identical, smaller molecules called monomers, which often have some mobility, causing many polymers to be flexible.  Many common materials and chemical substances are polymers, for example plastics and proteins.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Gas Chromatography.nlogo""", info: """<p>This is a model of gas chromatography.  Much of modern chemistry depends on chromatography for the separation of chemicals.  (Gas chromatography is one form of chromatography, involving gases.)  Chromatography can even be so sensitive as to separate enantiomers (i.e., molecules that differ only by being mirror images of each other!).</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Crystallization/Crystallization Directed.nlogo""", info: """<p>Some metal applications require that a metal&rsquo;s grains form specific patterns. To achieve this, the metal is only cooled from certain sides.  This can be done in several ways.  For example, when molds are made of metal, wires are used to heat up the mold where they want the metal to crystallize last.  For molds made of sand, pieces of metal are put where the liquid metal should crystallize first.  The inserted metal (known as a heat sink), works to quickly suck the heat out of the liquid metal.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Crystallization/Crystallization Basic.nlogo""", info: """<p>This model shows how grains are formed as a metal crystallizes.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Crystallization/Crystallization Moving.nlogo""", info: """<p>This model simulates the movement of metal atoms as a system crystallizes.  It is very similar to the Crystallization Basic model, except here the atoms are free to move about.  They randomly move in any direction that is not already occupied by something else, such as another atom or a wall.  Therefore, in order to allow movement, there must be empty spaces between atoms.  Initially these empty spaces, or voids, are randomly distributed, as they would be in a liquid metal.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Kicked Rotator.nlogo""", info: """<p>A <a href="https://en.wikipedia.org/wiki/Kicked_rotator" target="_blank">kicked rotator</a> is usually imagined as a particle constrained to move on a circle in a system with no friction or gravity that is periodically kicked. You can also think of it as a pendulum swinging with no gravity. The motion of this particle can be used to generate what is called the <a href="http://www.scholarpedia.org/article/Chirikov_standard_map" target="_blank">Chirikov standard map</a>, a tool in physics that can be used to describe many different dynamical systems from the motion of particles in accelerators to comet dynamics in solar systems.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Solid Diffusion.nlogo""", info: """<p>This model describes how diffusion occurs between two adjacent solids.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Mechanics/Random Balls.nlogo""", info: """<p>Random Balls simulates a frictionless billiard table.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Mechanics/Unverified/N-Bodies.nlogo""", info: """<p>This project displays the common natural phenomenon expressed by the inverse-square law.  Essentially this displays what happens when the strength of the force between two objects varies inversely with the square of the distance between these two objects.  In this case, the formula used is the standard formula for the Law of Gravitational Attraction:</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Mechanics/Unverified/Gravitation.nlogo""", info: """<p>This project displays the common natural phenomenon expressed by the inverse-square law.  Essentially this model displays what happens when the strength of the force between two objects varies inversely with the square of the distance between these two objects.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Sandpile.nlogo""", info: """<p>The Bak–Tang–Wiesenfeld sandpile model demonstrates the concept of &ldquo;self-organized criticality&rdquo;. It further demonstrates that complexity can emerge from simple rules and that a system can arrive at a critical state spontaneously rather than through the fine tuning of precise parameters.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Sand.nlogo""", info: """<p>This is a model of how sand particles interact with each other.  In this environment, all sand particles try to move down if any of the following four rules apply.  The four rules are:</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/MaterialSim/MaterialSim Grain Growth.nlogo""", info: """<p>Most materials are not continuous arrangements of atoms. Rather, they are composed of thousands or millions of microscopic crystals, known as grains.  This model shows how the configuration and sizes of these grains change over time.  Grain size is a very important characteristic for evaluating the mechanical properties of materials; it is exhaustively studied in metallurgy and materials science.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Waves/Rope.nlogo""", info: """<p>This project simulates a wave moving along a rope.  The right end of the rope (shown in blue) is fixed to a wall.  The left end of the rope (shown in green) provides an input, moving up and down in a sinusoidal motion.  This creates a wave that travels along the rope.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Waves/Lattice Gas Automaton.nlogo""", info: """<p>This model demonstrates circular wave propagation using a cellular automaton on a square grid.  The behavior of the waves approximates the Navier-Stokes equation, a well established fluid dynamics equation discovered in 1823.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Waves/Unverified/Raindrops.nlogo""", info: """<p>This model simulates raindrops falling on the surface of a pond and the waves they produce.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Waves/Unverified/Doppler.nlogo""", info: """<p>This model demonstrates the Doppler effect, the apparent change in the frequency of a wave emitted by a source moving relative to an observer.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Waves/Unverified/Speakers.nlogo""", info: """<p>This model simulates sound wave interference. There is one speaker at each end. A sinusoidal signal generator powers each speaker. The yellow line represents the sound level due to the left speaker, the cyan line represents the sound level due to the right speaker, and the red line represents the sum of the sound levels due to both speakers.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Waves/Wave Machine.nlogo""", info: """<p>This model simulates wave motion in a membrane. The four edges of the membrane are fixed to a frame. A green rectangular area represents a driver plate that moves up and down, exhibiting sinusoidal motion.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Unverified/Osmotic Pressure.nlogo""", info: """<p>Osmotic pressure is generally defined as the amount of pressure required to bring solvent movement across a semipermeable membrane to equilibrium. This model attempts to model an agent-based description of the movement of solution particles across a semipermeable membrane and illustrate the colligative nature of osmotic pressure.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Unverified/Scattering.nlogo""", info: """<p>This project models the scattering of particles from a target that repels them.  An example of this is the scattering of alpha particles (helium nuclei) from a heavy nucleus such as gold.  This experiment, first done by Rutherford, provided important evidence that the positive charge in an atom is concentrated in a small place.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Lennard-Jones.nlogo""", info: """<p>Matter usually exists in one of three phases: solid, liquid or gas. We often think of matter as a continuous bulk substance that mysteriously changes between these phases as temperature changes (and as pressure changes). We all know that when you heat up ice, it turns to water, and when you heat water further it turns to vapor. But why does this happen? To answer this question we must go down to the atomic level, and examine how atoms interact.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Ising.nlogo""", info: """<p>This is a model of a magnet at the microscopic level. It is a classic model of condensed matter physics. A crystalline material is conceived of as a set of lattice points with spins. The spins (magnetic moments) of the atoms in the magnet can either be up or down. Spins can change as a result of being influenced by neighboring spins and by the ambient temperature. Spins prefer to align with their neighbors. The overall behavior of the system will vary depending on the temperature.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Diffusion Limited Aggregation/DLA Alternate.nlogo""", info: """<p>Like the main DLA model, this model demonstrates diffusion-limited aggregation, in which particles moving (diffusing) in random trajectories stick together (aggregate) to form beautiful treelike branching fractal structures.  There are many patterns found in nature that resemble the patterns produced by this model: crystals, coral, fungi, lightning, and so on.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Diffusion Limited Aggregation/DLA Alternate Linear.nlogo""", info: """<p>Like the main DLA model, this model demonstrates diffusion-limited aggregation.  In this variant, instead of particles forming a circular aggregate that grows from a central point, particles form vertical aggregates that grow along an edge.</p>
""" },
  { path: """models/Sample Models/Chemistry & Physics/Diffusion Limited Aggregation/DLA.nlogo""", info: """<p>This model demonstrates diffusion-limited aggregation, in which randomly moving (diffusing) particles stick together (aggregate) to form beautiful treelike branching fractal structures.  There are many patterns found in nature that resemble the patterns produced by this model: crystals, coral, fungi, lightning, and so on.</p>
""" },
  { path: """models/Sample Models/Art/Fireworks.nlogo""", info: """<p>This program models the action of fireworks.  Rockets begin at the bottom of the view, shoot upwards into the sky and then explode, emitting showers of falling sparks.</p>
""" },
  { path: """models/Sample Models/Art/Diffusion Graphics.nlogo""", info: """<p>Diffusion Graphics is unlike most other NetLogo models, in that it really doesn&rsquo;t &lsquo;model&rsquo; anything. It simply explores the power behind an interesting patch primitive: &lsquo;diffuse&rsquo;.</p>
""" },
  { path: """models/Sample Models/Art/Sound Machines.nlogo""", info: """<p>This model shows one way turtles can make interesting and varied sounds, or if you like, music.  It uses some simple physics to make &ldquo;machines&rdquo; that twist, spin, turn, twitch, and bounce.  When a part of the machine touches a wall, ceiling, or floor, it makes a sound.  The pitch of the sound depends on the location of the touch.</p>
""" },
  { path: """models/Sample Models/Art/GenJam - Duple.nlogo""", info: """<p>This model generates drum rhythms using a genetic algorithm. Using the rhythmic &ldquo;rules&rdquo; from West African drum circles, low, medium, and high-drum patterns work in concert with evolution to create jamming beats. This is the &lsquo;duple&rsquo; version of the model, where there are 4 &lsquo;beats&rsquo; per chromosome.</p>
""" },
  { path: """models/Sample Models/Art/Unverified/Geometron Top-Down.nlogo""", info: """<p>This model uses NetLogo turtles to repeatedly draw circles and other geometric shapes, turning periodically so that the display gives the impression of a kaleidoscope or a pinwheel.</p>
""" },
  { path: """models/Sample Models/Art/Unverified/Kaleidoscope.nlogo""", info: """<p>This model uses NetLogo turtles to repeatedly draw circles, turning periodically so that the display gives the impression of a kaleidoscope or pinwheel.</p>
""" },
  { path: """models/Sample Models/Art/Follower.nlogo""", info: """<p>In Follower, turtles attempt to &ldquo;connect&rdquo; with other turtles, forming long chains according to a small set of simple rules.</p>
""" },
  { path: """models/Sample Models/Art/Optical Illusions.nlogo""", info: """<p>This model presents seven optical illusions.</p>
""" },
  { path: """models/Sample Models/System Dynamics/Exponential Growth.nlogo""", info: """<p>This is a model of exponential growth using the System Dynamics Modeler.</p>
""" },
  { path: """models/Sample Models/System Dynamics/Wolf Sheep Predation (System Dynamics).nlogo""", info: """<p>This is a model of a simple predator-prey ecosystem. It uses the System Dynamics Modeler to implement the Lotka-Volterra equations.</p>
""" },
  { path: """models/Sample Models/System Dynamics/Wolf Sheep Predation (Docked Hybrid).nlogo""", info: """<p>This model explores the relationship between two different models of predator-prey ecosystems: an agent-based model and a aggregate model.  Each of the models can be run separately, or docked side-by-side for comparison.</p>
""" },
  { path: """models/Sample Models/System Dynamics/Logistic Growth.nlogo""", info: """<p>This is a model of a logistic growth curve using the System Dynamics Modeler.</p>
""" },
  { path: """models/Sample Models/System Dynamics/Unverified/Tabonuco Yagrumo Hybrid.nlogo""", info: """<p>This is a model of a simple ecosystem of two species of trees that compete for space in a forest canopy.  Tabonuco Yagrumo Hybrid is different from Tabonuco Yagrumo in that the competition for space is explicitly modeled using turtles and patches, as opposed to being modeled as a relationship between stocks in the System Dynamics Modeler.  It is intended to be a simple example of how the two approaches can be combined into a hybrid model, and its behavior is similar to the non-hybrid version.</p>
""" },
  { path: """models/Sample Models/System Dynamics/Unverified/Tabonuco Yagrumo.nlogo""", info: """<p>This is a system dynamics model of a simple ecosystem.  Two species of trees &ndash; tabonuco and yagrumo &ndash; compete for space in a forest canopy.  This model illustrates the role of hurricane destruction in this ecosystem, as well as the resultant nitrogen and carbon produced by the ecosystem.</p>
""" },
  { path: """models/Sample Models/Psychology/Piaget-Vygotsky Game.nlogo""", info: """<p>This model is designed as a &ldquo;thought experiment&rdquo; to shed light on the ongoing debate between two theories of learning, constructivism and social constructivism. In it, agents &ldquo;learn&rdquo; through playing a game either as individuals, social interactors, or both.</p>
""" },
  { path: """models/Sample Models/Mathematics/Voronoi.nlogo""", info: """<p>This model draws a Voronoi diagram of polygons around a set of points.  These diagrams resemble many phenomena in the world including cells, forest canopies, territories of animals, fur and shell patterns, crystal growth and grain growth, cracks in dried mud and other geological phenomena, road networks, and so on.  Voronoi diagrams are useful in computer graphics, vision and path planning for robots, marketing, and other applications.</p>
""" },
  { path: """models/Sample Models/Mathematics/Vector Fields.nlogo""", info: """<p>This is a mathematical model that demonstrates abstract vector fields and integral curves.</p>
""" },
  { path: """models/Sample Models/Mathematics/Color Fractions.nlogo""", info: """<p>Color Fractions displays the decimal form of a fraction as a pattern of colors.  This lets you investigate how the resulting patterns relate to the original fraction.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/Galton Box.nlogo""", info: """<p>A Galton box is a triangular board that contains several rows of staggered but equally spaced pegs.  Balls are dropped from the top, bounce off the pegs and stack up at the bottom of the triangle.  The resulting stacks of balls have a characteristic shape.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/Binomial Rabbits.nlogo""", info: """<p>This model simulates a binomial probability distribution or (in the limit) normal distribution.  It works by analogizing height variations to rabbit hops.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Dice Stalagmite.nlogo""", info: """<p>Dice Stalagmite is a model for thinking about the relations between independent and dependent random events.  Pairs of dice are rolled, then the dice fall into columns in two bar charts.  One of these charts records the dice as two independent outcomes, and the other, as a single compound event (sum) of these two outcomes.  Because the columns grow from the bottom up, we call this a &ldquo;stalagmite.&rdquo;</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/ProbLab Genetics.nlogo""", info: """<p>This model demonstrates some connections between probability and the natural sciences.  Specifically, the model uses combinatorial space, sampling, and distribution in a genotype/phenotype analysis of fish procreation. The model allows you to look &ldquo;under the hood&rdquo;: you can study a Mendel-type visualization of the combinations of dominant and recessive genes that underlie changes and trends in genetic distribution.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Stochastic Patchwork.nlogo""", info: """<p>Stochastic Patchwork is a simple model for thinking about a profound idea in the domain of probability: the relation between, on the one hand, the independent chance of  elements to take on the value of a favored event, and on the other hand, the distribution of means of grouped outcomes, that is &lsquo;samples.&rsquo;  Should the distribution of sample means reflect the independent probability?  If so, why?  In this dynamic model, a histogram representing the accumulating distribution of sample means grows before our eyes.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Random Basic.nlogo""", info: """<p>Random Basic is the simplest of all the ProbLab models. It can either be used first or as a detour from a more complex model to explain randomness.  This model introduces the user to the random generator in NetLogo. Randomness means that in the short term you cannot guess a value but in the long term all possible values will have occurred more or less equally often.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Unverified/Expected Value Advanced.nlogo""", info: """<p>Expected Value Advanced illustrates expected-value analysis under the special condition that the sample size varies.  This model extends the ProbLab model Expected Value, where the sample size is fixed.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Unverified/Partition Permutation Distribution.nlogo""", info: """<p>Partition Permutation Distribution is a model built around the idea of a partition function. This function relates between an integer, e.g., 4, and the number of different ways you can break this integer up into groups of integers, where order does not matter. For instance, 4 can be broken up in 5 ways:</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Unverified/Random Combinations and Permutations.nlogo""", info: """<p>&ldquo;Random Combinations and Permutations&rdquo; is a virtual laboratory for learning about probability, and specifically about combinations and permutations, sample space, samples, favored events, and outcome distributions. The model invites you to pick a secret combination and then see how long it takes the computer to find it. The computer discovers your secret combination by just guessing blindly until it happens to guess correctly.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Unverified/Expected Value.nlogo""", info: """<p>In this model you run experiments that demonstrate the mathematical idea &ldquo;expected value&rdquo; (sometimes called &ldquo;expectation value&rdquo;). There is a set of different possible outcomes, and each of these outcomes has a different value. The model predicts the expected value based on the probabilities of each of these outcomes. The user can then take samples from the population and compare them to the values predicted by the model.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Unverified/Random Basic Advanced.nlogo""", info: """<p>Random Basic Advanced explores the effect of sample size on the distribution of sample mean.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Unverified/Shuffle Board.nlogo""", info: """<p>Shuffle Board investigates distributions of favored events in a series of outcomes.  The basic analogy is that there are a lot of candy boxes, but only some have prizes in them. You are buying one candy box after another, waiting for prizes, and keeping track of two things: how many boxes do you need to buy until you get a prize? When you had lucky streaks, how long were they?</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Unverified/9-Blocks.nlogo""", info: """<p>9-Blocks accompanies classroom work on the Combinations Tower, the giant bell-shaped histogram of all the 512 different green/blue combinations of the 3-by-3 array.  Whereas building the Combinations Tower is a form of theoretical probability &mdash; combinatorial analysis &mdash; the 9-Block model complements with empirical probability of the same 3-by-3 object.  In the plot window, a tall histogram grows that has the same shape as the Combinations Tower.  How can that be?  That is the theme question of this model.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Unverified/Sample Stalagmite.nlogo""", info: """<p>9-Block Stalagmite draws on and connects several central ideas in the study of probability, both theoretical and empirical: combinatorics, sample space, binomial distributions, and frequency distribution function.  In the related curricular material, students use crayons and paper to build the Combinations Tower.  The Combinations Tower is a giant bell-shaped histogram of all the 512 different combinations of a 3-by-3 array of squares that can each be either green or blue.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Unverified/Equidistant Probability.nlogo""", info: """<p>Equidistant Probability connects between probability and geometry. You select two or more squares, and the model searches randomly for squares that are equally distant from the squares you selected. To do this random search, creatures pop out of each one of your selected squares and simultaneously step forward one step in some random direction. If they all land in the same square, that&rsquo;s a hit. Can you guess how often this will happen?</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Unverified/Central Limit Theorem.nlogo""", info: """<p>This demonstrates relations between population distributions and their sample mean distributions as well as the affect of sample size on this relation. In this model, a population is distributed by some variable, for instance by their total assets in thousands of dollars. The population is distributed randomly &ndash; not necessarily &lsquo;normally&rsquo; &ndash; but sample means from this population nevertheless accumulate in a distribution that approaches a normal curve. The program allows for repeated sampling of individual specimens in the population.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Dice.nlogo""", info: """<p>&ldquo;Dice&rdquo; is a virtual laboratory for learning about probability through conducting and analyzing experiments. You set up an experiment by choosing a combination of face values for each dice, for instance 3 and 4 (we will use this example throughout). Then the model &ldquo;rolls&rdquo; two dice repeatedly and records how often its dice match your chosen combination.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/ProbLab/Prob Graphs Basic.nlogo""", info: """<p>Prob Graphs Basic is a basic introduction to probability and statistics.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/Random Walk 360.nlogo""", info: """<p>In this model the turtles engage in a &ldquo;random walk.&rdquo;  Each turtle walks one step away from its current location in a different random direction at each clock tick. This movement is known as walking a 360-gon &ldquo;lattice.&rdquo;  A lattice is a set of points on the plane (or in space) that form a grid on which turtles walk.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/Unverified/Random Walk Left Right.nlogo""", info: """<p>This is a model to simulate a random walk.  In this simulation, all turtles walk to the left and forward or they walk to the right and forward.  The turtles randomly choose between either direction each time they move.</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/Birthdays.nlogo""", info: """<p>In a room of 23 people, what are the chances that some two of them will have the same birthday?</p>
""" },
  { path: """models/Sample Models/Mathematics/Probability/Three Doors.nlogo""", info: """<p>You are a contestant on a game show.  You, of all people, have made it to the final round, where you have the chance to win some fabulous prize &mdash; a car, a million dollars, eternal youth, etc&hellip;  The host or hostess of the game show takes you up on stage, where you stand before three doors, marked &ldquo;0&rdquo;, &ldquo;1&rdquo;, and &ldquo;2&rdquo;.</p>
""" },
  { path: """models/Sample Models/Mathematics/Conic Sections 2.nlogo""", info: """<p>The model displays two basic conic sections: hyperbolas and parabolas.  The figures are generated behaviorally as opposed to algebraically - the turtles attempt to behave like points on the specified shape. The partner to this model is called &ldquo;Conic Sections 1&rdquo;.</p>
""" },
  { path: """models/Sample Models/Mathematics/Mousetraps.nlogo""", info: """<p>Imagine a gymnasium full of mousetraps.  On each mousetrap is a ping pong ball.  Now throw a single ping pong ball into the middle of the room. The ball lands on a trap, the trap triggers, and a second ball flies into the air.  The first ball also bounces into the air again, so now there are two balls in the air.  Each of those two balls triggers another trap, so there&rsquo;s four balls in the air. And so on&hellip;</p>
""" },
  { path: """models/Sample Models/Mathematics/3D Surface.nlogo""", info: """<p>This model maps turtles between Cartesian and spherical 3-dimensional coordinates.  To create the appearance of a curved 3D surface, the program generates turtles with random x- and z-coordinates, then computes each turtle&rsquo;s y-coordinate based on x and z, and time.  The cosine function is used in the formula to produce a curved surface.  Varying the y coordinate based on time produces motion.</p>
""" },
  { path: """models/Sample Models/Mathematics/Fractals/Tree Simple.nlogo""", info: """<p>This program draws special types of pictures called fractals.  A fractal is a shape that is self-similar - that is, it looks the same no matter how closely you zoom in or out.  For instance, a tree can be thought of as a fractal since if you look at the tree as a whole, you see a stick, that is to say the trunk, with branches coming out of it.  Then if you look at a smaller portion of it, say a branch, you see a similar thing, namely, a stick with branches coming out of it.</p>
""" },
  { path: """models/Sample Models/Mathematics/Fractals/Mandelbrot.nlogo""", info: """<p>This model draws a mathematical object called the Mandelbrot set, named after its discoverer, Benoit Mandelbrot.  It demonstrates an interesting technique for generating the design as well as providing a nice example of hill climbing.</p>
""" },
  { path: """models/Sample Models/Mathematics/Fractals/Koch Curve.nlogo""", info: """<p>Helge von Koch was a Swedish mathematician who, in 1904, introduced what is now called the Koch curve.  This curve contains no straight lines which are smooth in the sense that we could see them as a carefully bent line.   Rather this curve has much of the complexity which we could see in a natural coastline: folds within folds within folds and so on.</p>
""" },
  { path: """models/Sample Models/Mathematics/Fractals/Sierpinski Simple.nlogo""", info: """<p>The fractal that this model produces was discovered by the great Polish mathematician Waclaw Sierpinski in 1916.  Sierpinski was a professor at Lvov and Warsaw.  He was one of the most influential mathematicians of his time in Poland and had a worldwide reputation.  One of the moon&rsquo;s craters is named after him.</p>
""" },
  { path: """models/Sample Models/Mathematics/Fractals/Star Fractal.nlogo""", info: """<p>This model creates a fractal-like structure consisting of stars drawn at various scales, the number of which is specified by the user.  The structure is drawn by generations of turtles that draw stars at a given scale and hatch successive generations to draw new ones at smaller scales.</p>
""" },
  { path: """models/Sample Models/Mathematics/Fractals/L-System Fractals.nlogo""", info: """<p>This program draws special types of pictures called fractals.  A fractal is a shape that is self-similar &mdash; that is, it looks the same no matter how closely you zoom in or out  For instance, a tree can be thought of as a fractal since if you look at the tree as a whole, you see a stick, that is to say the trunk, with branches coming out of it.  Then if you look at a smaller portion of it, say a branch, you see a similar thing, namely, a stick with branches coming out of it.</p>
""" },
  { path: """models/Sample Models/Mathematics/Voronoi - Emergent.nlogo""", info: """<p>This model draws a Voronoi diagram by using turtles to define the boundaries between polygons that denote the region that is closest to a given point.  Voronoi diagrams resemble many phenomena in the world including cells, forest canopies, territories of animals, fur and shell patterns, crystal growth and grain growth, cracks in dried mud and other geological phenomena, road networks, and so on.  Voronoi diagrams are useful in computer graphics, vision and path planning for robots, marketing, and other applications.</p>
""" },
  { path: """models/Sample Models/Mathematics/Conic Sections 1.nlogo""", info: """<p>The model displays two basic conic sections: circles and ellipses. The figures are generated behaviorally as opposed to algebraically &mdash; the turtles attempt to behave like points on the specified shape.</p>
""" },
  { path: """models/Sample Models/Mathematics/Rugby.nlogo""", info: """<p>&ldquo;In rugby, after a try has been scored, the scoring team has the opportunity to gain further points by &lsquo;kicking a conversion&rsquo;. The kick can be taken from anywhere on an imaginary line that is perpendicular to the try line (aka the goal line) and goes through the location on the try line where the try was scored.  Where should the kick be taken from to maximize the chance of a score?&rdquo;</p>
""" },
  { path: """models/Sample Models/Mathematics/Pursuit.nlogo""", info: """<p>In this model there is one leader turtle and a group of follower turtles.  Have a little fun &ndash; hide the leader and try to guess the path it&rsquo;s moving along.  Watching the followers gives you clues to the leader&rsquo;s path.</p>
""" },
  { path: """models/Sample Models/Mathematics/Unverified/Surface Walking 2D.nlogo""", info: """<p>This model is a 2D version of a surface-walking algorithm used in &ldquo;Surface Walking 3D&rdquo;. Turtles approximate a user-defined surface using a simple algorithm that considers the turtle&rsquo;s current position relative to neighboring surface patches.</p>
""" },
  { path: """models/Sample Models/Mathematics/Unverified/PANDA BEAR Solo.nlogo""", info: """<p>This is a Solo version of the HubNet activity called Perimeters and Areas by Embodied Agent Reasoning, or PANDA BEAR. PANDA BEAR Solo can be used as a standalone activity or as an introduction to PANDA BEAR.</p>
""" },
  { path: """models/Sample Models/Mathematics/Division.nlogo""", info: """<p>&ldquo;What&rsquo;s 65 divided by 14?&rdquo; There are many ways to answer this question. Some examples are 4.643, 4, four and nine fourteenths, and 4 with 9 left over. The last answer is an example of the kind of result this model would give.</p>
""" },
  { path: """models/Sample Models/Mathematics/3D Solids.nlogo""", info: """<p>This model creates 3D shapes out of 2D turtles by mapping turtles between cartesian and spherical three-dimensional coordinates.</p>
""" },
  { path: """models/Sample Models/Mathematics/Turtles Circling.nlogo""", info: """<p>This is a new kind of mathematical investigation — we are investigating the emergent shape created by the movement of many turtles moving independently in simple ways. Each turtle is moving so as to create a circle of a fixed radius (set by the RADIUS slider).  What happens if the radius they are all circling at is changed in mid-action? Guess before you try it.</p>
""" },
  { path: """models/Sample Models/Earth Science/Erosion.nlogo""", info: """<p>This model is a simulation of soil erosion by water.  The user is presented with an empty terrain.  Rain falls on the terrain and starts to flow downhill.  As it flows, it erodes the terrain below.  The patterns of water flow change as the terrain is reshaped by erosion.  Eventually, a river system emerges.</p>
""" },
  { path: """models/Sample Models/Earth Science/Continental Divide.nlogo""", info: """<p>This model demonstrates one way to locate a continental divide.  A continental divide separates a continent into two regions based on two bodies of water.  Rain in one region flows into one body of water and rain in the other region flows into the other.</p>
""" },
  { path: """models/Sample Models/Earth Science/Fire.nlogo""", info: """<p>This project simulates the spread of a fire through a forest.  It shows that the fire&rsquo;s chance of reaching the right edge of the forest depends critically on the density of trees. This is an example of a common feature of complex systems, the presence of a non-linear threshold or critical parameter.</p>
""" },
  { path: """models/Sample Models/Earth Science/Percolation.nlogo""", info: """<p>This model shows how an oil spill can percolate down through permeable soil.  It was inspired by a similar model meant to be done by hand on paper (see &ldquo;Forest Fires, Oil Spills, and Fractal Geometry&rdquo;, Mathematics Teacher, Nov. 1998, p. 684-5).</p>
""" },
  { path: """models/Sample Models/Earth Science/Grand Canyon.nlogo""", info: """<p>This model simulates rainfall on a patch of terrain on the eastern end of the Grand Canyon, approximately 6 miles (9.7 km) on each side, where Crazy Jug Canyon and Saddle Canyon meet to form Tapeats Canyon. Each patch represents an area approximately 105 feet (32 m) on each side. The model was created as an experiment in using NetLogo with My World GIS.</p>
""" },
  { path: """models/Sample Models/Earth Science/Unverified/Lightning.nlogo""", info: """<p>This model shows how lightning is generated. The process consists of two phases: the production of the electric field, and the air ionization to create the bolt. This model represents the latter phase.</p>
""" },
  { path: """models/Sample Models/Earth Science/Climate Change.nlogo""", info: """<p>This is a model of energy flow in the earth, particularly heat energy. It shows the earth as rose colored, and the surface of the planet is represented by a black strip. Above the strip there is a blue atmosphere and black space at the top. Clouds and carbon dioxide (CO2) molecules can be added to the atmosphere. The CO2 molecules represent greenhouse gases that block infrared light that is emitted by the earth. Clouds block incoming or outgoing sun rays, influencing the heating up or cooling down of the planet.</p>
""" },
  { path: """models/Sample Models/Networks/Diffusion on a Directed Network.nlogo""", info: """<p>This model demonstrates diffusion of a quantity through a directed network. The quantity moves among nodes in the network only along established, directed links between two nodes.</p>
""" },
  { path: """models/Sample Models/Networks/Preferential Attachment.nlogo""", info: """<p>In some networks, a few &ldquo;hubs&rdquo; have lots of connections, while everybody else only has a few.  This model shows one way such networks can arise.</p>
""" },
  { path: """models/Sample Models/Networks/Giant Component.nlogo""", info: """<p>In a network, a &ldquo;component&rdquo; is a group of nodes (people) that are all connected to each other, directly or indirectly.  So if a network has a &ldquo;giant component&rdquo;, that means almost every node is reachable from almost every other.  This model shows how quickly a giant component arises if you grow a random network.</p>
""" },
  { path: """models/Sample Models/Networks/Team Assembly.nlogo""", info: """<p>This model of collaboration networks illustrates how the behavior of individuals in assembling small teams for short-term projects can give rise to a variety of large-scale network structures over time.  It is an adaptation of the team assembly model presented by Guimera, Uzzi, Spiro &amp; Amaral (2005).  The rules of the model draw upon observations of collaboration networks ranging from Broadway productions to scientific publications in psychology and astronomy.</p>
""" },
  { path: """models/Sample Models/Networks/Virus on a Network.nlogo""", info: """<p>This model demonstrates the spread of a virus through a network.  Although the model is somewhat abstract, one interpretation is that each node represents a computer, and we are modeling the progress of a computer virus (or worm) through this network.  Each node may be in one of three states:  susceptible, infected, or resistant.  In the academic literature such a model is sometimes referred to as an SIR model for epidemics.</p>
""" },
  { path: """models/Sample Models/Networks/Small Worlds.nlogo""", info: """<p>This model explores the formation of networks that result in the &ldquo;small world&rdquo; phenomenon &ndash; the idea that a person is only a couple of connections away any other person in the world.</p>
""" },
  { path: """models/Sample Models/Philosophy/Signaling Game.nlogo""", info: """<p>This is a model of a &ldquo;signaling game&rdquo;, in which players try to use different signals to communicate about the current state of the world.</p>
""" },
  { path: """models/Sample Models/Computer Science/K-Means Clustering.nlogo""", info: """<p>Often, when we have data about a large set of objects, we want to identify groups of similar objects within that set. For example, if we have many news articles, we may want to identify groups of articles that all have the same topic. In statistics, this task is called “cluster analysis”, or “clustering”.</p>
""" },
  { path: """models/Sample Models/Computer Science/Particle Systems/Particle System Fountain.nlogo""", info: """<p>This particle system models a particle fountain emitting particles from the bottom of the world.</p>
""" },
  { path: """models/Sample Models/Computer Science/Particle Systems/Particle System Flame.nlogo""", info: """<p>This particle system models a flame as a collection of particles rising up from the bottom of the world.</p>
""" },
  { path: """models/Sample Models/Computer Science/Particle Systems/Particle System Basic.nlogo""", info: """<p>Particle systems are used in computer graphics to simulate the appearance of physical phenomena that can be modeled as a collection of particles.  For example, some typical particle systems include: waterfalls, fire, smoke, explosions, snow, and meteors.</p>
""" },
  { path: """models/Sample Models/Computer Science/Particle Systems/Particle System Waterfall.nlogo""", info: """<p>This particle system models a waterfall where a steady stream of particles is created, then fall and bounce off the bottom.</p>
""" },
  { path: """models/Sample Models/Computer Science/Simple Genetic Algorithm.nlogo""", info: """<p>This model demonstrates the use of a genetic algorithm on a very simple problem.  Genetic algorithms (GAs) are a biologically-inspired computer science technique that combine notions from Mendelian genetics and Darwinian evolution to search for good solutions to problems (including difficult problems).  The GA works by generating a random population of solutions to a problem, evaluating those solutions and then using cloning, recombination and mutation to create new solutions to the problem.</p>
""" },
  { path: """models/Sample Models/Computer Science/Robby the Robot.nlogo""", info: """<p>Robby the Robot is a virtual robot who moves around a room and picks up cans.  This model demonstrates the use of a genetic algorithm (GA) to evolve control strategies for Robby.  The GA starts with randomly generated strategies and then uses evolution to improve them.</p>
""" },
  { path: """models/Sample Models/Computer Science/Dining Philosophers.nlogo""", info: """<p>The Dining Philosophers problem is a classic case study in the synchronization of concurrent processes.  It will be familiar to many students of Computer Science, but is applicable to many situations in which several independent processes must coordinate the use of shared resources.</p>
""" },
  { path: """models/Sample Models/Computer Science/Artificial Neural Net - Perceptron.nlogo""", info: """<p>Artificial Neural Networks (ANNs) are computational parallels of biological neurons. The &ldquo;perceptron&rdquo; was the first attempt at this particular type of machine learning.  It attempts to classify input signals and output a result.  It does this by being given a lot of examples and attempting to classify them, and having a supervisor tell it if the classification was right or wrong.  Based on this information the perceptron updates its weights until it classifies all inputs correctly.</p>
""" },
  { path: """models/Sample Models/Computer Science/Cellular Automata/CA 1D Elementary.nlogo""", info: """<p>This program models one-dimensional cellular automata.  A cellular automaton (CA) is a computational machine that performs actions based on certain rules.  The automaton is divided into cells, like the square cells of a checkerboard.  Each cell can be either on or off (its &ldquo;state&rdquo;).  The board is initialized with some cells on and some off.  At each time step (or &ldquo;tick&rdquo;) some rules &ldquo;fire&rdquo; and this results in some cells turning &ldquo;on&rdquo; and some turning &ldquo;off&rdquo;.</p>
""" },
  { path: """models/Sample Models/Computer Science/Cellular Automata/CA Continuous.nlogo""", info: """<p>This is a continuous cellular automaton, otherwise known as a &ldquo;coupled map lattice.&rdquo;  (See CA 1D Elementary and CA 1D Totalistic if you are unfamiliar with cellular automata.)  It operates just like a standard cellular automaton, except for the fact that its states are not discrete, but continuous values.</p>
""" },
  { path: """models/Sample Models/Computer Science/Cellular Automata/Life Turtle-Based.nlogo""", info: """<p>This model is the same as the Life model, but with a more attractive display.  This display is achieved by basing the model on turtles rather than patches.</p>
""" },
  { path: """models/Sample Models/Computer Science/Cellular Automata/CA 1D Totalistic.nlogo""", info: """<p>This program is a one-dimensional three-color totalistic cellular automata. In a totalistic CA, the value of the next cell state is determined by the sum of the current cell and its neighbors, not by the values of each individual neighbor. The model allows you to explore all 2,187 3-color totalistic configurations.</p>
""" },
  { path: """models/Sample Models/Computer Science/Cellular Automata/CA Stochastic.nlogo""", info: """<p>This is a one-dimensional stochastic cellular automaton.  (See the CA 1D Elementary model if you are unfamiliar with cellular automata.)  Unlike most cellular automata, whose behavior is deterministic, the behavior of a stochastic cellular automaton is probabilistic.  Stochastic cellular automata are models of &ldquo;noisy&rdquo; systems in which processes do not function exactly as expected, like most processes found in natural systems.</p>
""" },
  { path: """models/Sample Models/Computer Science/Cellular Automata/Life.nlogo""", info: """<p>This program is an example of a two-dimensional cellular automaton.  This particular cellular automaton is called The Game of Life.</p>
""" },
  { path: """models/Sample Models/Computer Science/Cellular Automata/Brian's Brain.nlogo""", info: """<p>This program is an example of a two-dimensional cellular automaton.  If you are not already familiar with 2D CA, see the model &ldquo;Life&rdquo; for a basic discussion.</p>
""" },
  { path: """models/Sample Models/Computer Science/Cellular Automata/CA 1D Simple Examples/CA 1D Rule 90.nlogo""", info: """<p>This program models one particular one-dimensional cellular automaton &mdash; the one known as &ldquo;rule 90&rdquo;.</p>
""" },
  { path: """models/Sample Models/Computer Science/Cellular Automata/CA 1D Simple Examples/CA 1D Rule 30 Turtle.nlogo""", info: """<p>This program models one particular one-dimensional cellular automaton &ndash; the one known as &lsquo;rule 30&rsquo;. It is intended to be a companion model to the CA 1D Rule 30 model and to show an alternate way of modeling a cellular automaton &mdash; by using turtles to do the processing instead of patches.</p>
""" },
  { path: """models/Sample Models/Computer Science/Cellular Automata/CA 1D Simple Examples/CA 1D Rule 30.nlogo""", info: """<p>This program models one particular one-dimensional cellular automaton &ndash; the one known as &ldquo;rule 30&rdquo;.</p>
""" },
  { path: """models/Sample Models/Computer Science/Cellular Automata/CA 1D Simple Examples/CA 1D Rule 250.nlogo""", info: """<p>This program models one particular one-dimensional cellular automaton &ndash; the one known as &ldquo;rule 250&rdquo;.</p>
""" },
  { path: """models/Sample Models/Computer Science/Cellular Automata/CA 1D Simple Examples/CA 1D Rule 110.nlogo""", info: """<p>This program models one particular one-dimensional cellular automaton &ndash; the one known as &ldquo;rule 110&rdquo;.</p>
""" },
  { path: """models/Sample Models/Computer Science/Artificial Neural Net - Multilayer.nlogo""", info: """<p>This is a model of a very small neural network.  It is based on the Perceptron model, but instead of one layer, this network has two layers of &ldquo;perceptrons&rdquo;.  Furthermore, the layers activate each other in a nonlinear way. These two additions means it can learn operations a single layer cannot.</p>
""" },
  { path: """models/Sample Models/Computer Science/Turing Machine 2D.nlogo""", info: """<p>This is a model of a multi-headed Turing machine on a 2 dimensional tape (2D MTM), which is an extension of the original machine proposed by Turing in 1936.</p>
""" },
  { path: """models/Sample Models/Computer Science/Particle Swarm Optimization.nlogo""", info: """<p>Particle swarm optimization (PSO) is a search/optimization technique in the field of machine learning.  Although PSO is usually employed on search spaces with many dimensions, this model demonstrates its use in a two dimensional space, for purposes of easier visualization.</p>
""" },
  { path: """models/Sample Models/Computer Science/Wandering Letters.nlogo""", info: """<p>This model illustrates how to build a word processor where each of the letters acts independently.  Each letter knows only which letter comes before it and how long its word is.  When the letters or margins are moved, the letters find their own ways back to their proper locations.</p>
""" },
  { path: """models/Sample Models/Computer Science/Unverified/Simulated Annealing.nlogo""", info: """<p>Simulated annealing is an optimization technique inspired by the natural annealing process used in metallurgy, whereby a material is carefully heated or cooled to create larger and more uniform crystalline structures.  In simulated annealing, a minimum value of some global &ldquo;energy&rdquo; function is sought.  This model attempts to find a minimal energy state of a simple function on a black and white image.</p>
""" },
  { path: """models/Sample Models/Computer Science/Unverified/Merge Sort.nlogo""", info: """<p>This model is a visual demonstration of a standard sort algorithm called merge sort.  The algorithm reorders, or permutes, n numbers into ascending order.  This is accomplished by dividing the numbers into groups and then merging smaller groups to form larger groups. Order is maintained as the lists are merged so when the algorithm finishes there is only one sorted list containing all n items.</p>
""" },
  { path: """models/Sample Models/Computer Science/Hex Cell Aggregation.nlogo""", info: """<p>This is a model of growth.  It takes place on a two-dimensional hexagonal grid of cells. Cells can either be alive or dead.  Various growth patterns result, depending on the exact rules governing growth.</p>
""" },
  { path: """models/Sample Models/Computer Science/Painted Desert Challenge.nlogo""", info: """<p>This model is based on the Termites model.  In Termites, the agents follow a set of simple rules that results in them moving all of the wood chips into a single pile.  Painted Desert Challenge adds the dimension of multiple types (colors) of wood chips.  The challenge is to get the termites to sort each chip type into its own pile.</p>
""" },
  { path: """models/Sample Models/Computer Science/Vants.nlogo""", info: """<p>This is a basic virtual ant (&ldquo;vant&rdquo;) model.  It shows how extremely simple deterministic rule can result in very complex-seeming behavior.  It also demonstrates the concept of time reversibility and shows that time reversibility is not incompatible with complex behavior.</p>
""" },
  { path: """models/Sample Models/Computer Science/PageRank.nlogo""", info: """<p>PageRank is an algorithm/metric that was developed at Stanford University by Larry Page and Sergey Brin, who went on to create the Google search engine (and company) based on this method.  PageRank is a technique for ranking the relevancy of web pages on the internet, through analysis of the hyperlink structure that links pages together.</p>
""" },
  { path: """models/Sample Models/Computer Science/SmoothLife.nlogo""", info: """<p>This model attempts to create Game of Life-like dynamics in a continuous domain. It is recommended that you be familiar with the Life model (in the models library) before looking at this one. As a reminder, in the Game of Life, each patch can either be alive or dead. Patches then update each tick as follows:</p>
""" },
  { path: """models/Sample Models/Games/Minesweeper.nlogo""", info: """<p>This is game of strategy.  There are land mines hidden beneath the green landscape.  Your job is to locate all of the mines without exploding any of them.</p>
""" },
  { path: """models/Sample Models/Games/Pac-Man.nlogo""", info: """<p>This is the classic arcade game, Pac-Man.  The game involves navigating Pac-Man through a maze.  Your objective is that Pac-Man eat all of the pellets (white circles), while avoiding the ghosts that pursue him.</p>
""" },
  { path: """models/Sample Models/Games/Frogger.nlogo""", info: """<p>This model is based on the classic arcade game, Frogger.  The object of the game is to get the frog, found at the bottom of the view, across the traffic and river to a safe lily pad on the other side.</p>
""" },
  { path: """models/Sample Models/Games/Tetris.nlogo""", info: """<p>This is the classic puzzle game, Tetris.  The game involves falling pieces composed of four blocks in different configurations.  The object of the game is to complete horizontal rows of blocks in the well.</p>
""" },
  { path: """models/Sample Models/Games/Unverified/Projectile Attack.nlogo""", info: """<p>This model is based on the classic game Tank Wars. Players must adjust angle and power of fire to hit a target with a projectile. Several factors, including gravity and wind must be taken into account.</p>
""" },
  { path: """models/Sample Models/Games/Unverified/Pac-Man Level Editor.nlogo""", info: """<p>This is a level editor for the Pac-Man model.  It can be used to edit the included levels and to create new levels that can be played in the Pac-Man model.  Familiarity with the Pac-Man model will be very helpful before attempting to create or edit levels.</p>
""" },
  { path: """models/Sample Models/Games/Lunar Lander.nlogo""", info: """<p>This model is based on the arcade game, Lunar Lander.  The object of the game is to land the red lunar module on the blue landing pad on the surface of the moon without crashing or breaking the module.</p>
""" },
  { path: """models/Sample Models/Games/Planarity.nlogo""", info: """<p>This is a puzzle game where you try to untangle a graph. (A graph is a collection of nodes connected by lines.) Try to reposition the nodes so that no two lines cross. The more nodes, the harder it gets!</p>
""" },
  { path: """models/Sample Models/Social Science/Party.nlogo""", info: """<p>This is a model of a cocktail party.  The men and women at the party form groups.  A party-goer becomes uncomfortable and switches groups if their current group has too many members of the opposite sex.  What types of group result?</p>
""" },
  { path: """models/Sample Models/Social Science/Paths.nlogo""", info: """<p>This is a model about how paths emerge along commonly traveled routes. People tend to take routes that other travelers before them have taken, making them more popular and causing other travelers to follow those same routes. This can be used to determine an ideal set of routes between a set of points of interest without needing a central planner. Paths emerge from routes that travelers share.</p>
""" },
  { path: """models/Sample Models/Social Science/Minority Game.nlogo""", info: """<p>This is a simplified model of an economic market.  In each time step, agents choose one of two sides, 0 or 1, and those on the minority side win a point.  This problem is inspired by the &ldquo;El Farol&rdquo; bar problem.  Each agent uses a finite set of strategies to make their decision based upon past record; however, the record consists only of which side, 0 or 1, was in the minority, not the actual population count of how many chose each side.</p>
""" },
  { path: """models/Sample Models/Social Science/Hotelling's Law.nlogo""", info: """<p>This model is a representation of Hotelling&rsquo;s law (1929), which examines the optimal placement of stores and pricing of their goods in order to maximize profit. In Hotelling&rsquo;s original paper, the stores were confined to a single dimension.  This model replicates and extends Hotelling&rsquo;s law, by allowing the stores to move freely on a plane.</p>
""" },
  { path: """models/Sample Models/Social Science/Rumor Mill.nlogo""", info: """<p>This program models the spread of a rumor.  The rumor spreads when a person who knows the rumor tells one of their neighbors.  In other words, spatial proximity is a determining factor as to how soon (and perhaps how often) a given individual will hear the rumor.</p>
""" },
  { path: """models/Sample Models/Social Science/Segregation.nlogo""", info: """<p>This project models the behavior of two types of agents in a neighborhood. The orange agents and blue agents get along with one another. But each agent wants to make sure that it lives near some of &ldquo;its own.&rdquo; That is, each orange agent wants to live near at least some orange agents, and each blue agent wants to live near at least some blue agents. The simulation shows how these individual preferences ripple through the neighborhood, leading to large-scale patterns.</p>
""" },
  { path: """models/Sample Models/Social Science/Rebellion.nlogo""", info: """<p>This project models the rebellion of a subjugated population against a central authority. It is is an adaptation of Joshua Epstein&rsquo;s model of civil violence (2002).</p>
""" },
  { path: """models/Sample Models/Social Science/Traffic Grid.nlogo""", info: """<p>This is a model of traffic moving in a city grid. It allows you to control traffic lights and global variables, such as the speed limit and the number of cars, and explore traffic dynamics.</p>
""" },
  { path: """models/Sample Models/Social Science/Voting.nlogo""", info: """<p>This model is a simple cellular automaton that simulates voting distribution by having each patch take a &ldquo;vote&rdquo; of its eight surrounding neighbors, then perhaps change its own vote according to the outcome.</p>
""" },
  { path: """models/Sample Models/Social Science/Bidding Market.nlogo""", info: """<p>This model demonstrates a very simple bidding market, where buyers and sellers try to get the best price for goods in a competitive setting.</p>
""" },
  { path: """models/Sample Models/Social Science/Language Change.nlogo""", info: """<p>This model explores how the properties of language users and the structure of their social networks can affect the course of language change.</p>
""" },
  { path: """models/Sample Models/Social Science/Traffic 2 Lanes.nlogo""", info: """<p>This model is a more sophisticated two-lane version of the &ldquo;Traffic Basic&rdquo; model.  Much like the simpler model, this model demonstrates how traffic jams can form. In the two-lane version, drivers have a new option; they can react by changing lanes, although this often does little to solve their problem.</p>
""" },
  { path: """models/Sample Models/Social Science/Scatter.nlogo""", info: """<p>This model simulates students&rsquo; ideas about scattering, which takes place just before exercising in gym. The students in a class start out all bunched up, and the teacher asks them to spread out or scatter.  This simulation shows the spread of the group when the individual students follow simple rules to decide whether to move and where.  The scatterers move according to rules that were gleaned from several interviews with sixth-grade students.</p>
""" },
  { path: """models/Sample Models/Social Science/Unverified/Prisoner's Dilemma/PD Basic.nlogo""", info: """<p>You and your partner have been arrested for robbing a bank and find yourselves in the classic prisoner&rsquo;s dilemma.  The police place each of you into separate rooms and come to you with the following proposal&hellip;</p>
""" },
  { path: """models/Sample Models/Social Science/Unverified/Prisoner's Dilemma/PD Two Person Iterated.nlogo""", info: """<p>This model is an iterated version of the prisoner&rsquo;s dilemma.  If you are unfamiliar with the basic concepts of the prisoner&rsquo;s dilemma, please refer to the PD Basic model found in the Prisoner&rsquo;s Dilemma suite.</p>
""" },
  { path: """models/Sample Models/Social Science/Unverified/Prisoner's Dilemma/PD N-Person Iterated.nlogo""", info: """<p>This model is a multiplayer version of the iterated prisoner&rsquo;s dilemma. It is intended to explore the strategic implications that emerge when the world consists entirely of prisoner&rsquo;s dilemma like interactions. If you are unfamiliar with the basic concepts of the prisoner&rsquo;s dilemma or the iterated prisoner&rsquo;s dilemma, please refer to the PD BASIC and PD TWO PERSON ITERATED models found in the PRISONER&rsquo;S DILEMMA suite.</p>
""" },
  { path: """models/Sample Models/Social Science/Unverified/Prisoner's Dilemma/PD Basic Evolutionary.nlogo""", info: """<p>One of the most prominently studied phenomena in Game Theory is the &ldquo;Prisoner&rsquo;s Dilemma.&rdquo;  The Prisoner&rsquo;s Dilemma, which was formulated by Melvin Drescher and Merrill Flood and named by Albert W. Tucker, is an example of a class of games called non-zero-sum games.</p>
""" },
  { path: """models/Sample Models/Social Science/Unverified/Traffic Intersection.nlogo""", info: """<p>In this model the turtles are cars traveling through an intersection.  The user has the ability to control the frequency of cars coming from each direction, the speed of the cars, and the timing of the light at the traffic intersection.  Once the frequency and speed of cars is selected, the user should run the simulation and adjust the timing of the traffic light so as to minimize the amount of waiting time of cars traveling through the intersection.</p>
""" },
  { path: """models/Sample Models/Social Science/Unverified/Cash Flow.nlogo""", info: """<p>This model is a simple extension of the model &ldquo;Bank Reserves&rdquo;. The purpose of the model is to help the user examine whether there is a relationship between the reserve ratio that banks must keep and the degree of equality in the distribution of the money that exist in the system.</p>
""" },
  { path: """models/Sample Models/Social Science/Unverified/Artificial Anasazi.nlogo""", info: """<p>This model simulates the population dynamics in the Long house Valley in Arizona between 800 and 1400. It is based on archaeological records of occupation in Long House Valley and shows that environmental variability alone can not explain the population collapse around 1350. The model is a replication of the work of Dean et al. (see references below).</p>
""" },
  { path: """models/Sample Models/Social Science/Unverified/Bank Reserves.nlogo""", info: """<p>This program models the creation of money in an economy through a private banking system. As most of the money in the economy is kept in banks but only little of it needs to be used (i.e. in cash form) at any one time, the banks need only keep a small portion of their savings on-hand for those transactions. This portion of the total savings is known as the banks&rsquo; reserves.</p>
""" },
  { path: """models/Sample Models/Social Science/Oil Cartel HubNet.nlogo""", info: """<p>This is a collaborative exploration of the economics of a market with imperfect competition. As members of a cartel, participants experience how jointly determined price and quantity decisions can be advantageous to suppliers, harmful to consumers, but also why a cartel is so difficult to sustain. In this version of Oil Cartel, cartel members face differing profit expectations, and set production and pricing strategies in an attempt to meet those expectations.  They respond to each other&rsquo;s behavior by altering their strategies.</p>
""" },
  { path: """models/Sample Models/Social Science/Ethnocentrism.nlogo""", info: """<p>This model, due to Robert Axelrod and Ross A. Hammond, suggests that &ldquo;ethnocentric&rdquo; behavior can evolve under a wide variety of conditions, even when there are no native &ldquo;ethnocentrics&rdquo; and no way to differentiate between agent types.  Agents compete for limited space via Prisoner Dilemma&rsquo;s type interactions. &ldquo;Ethnocentric&rdquo; agents treat agents within their group more beneficially than those outside their group.  The model includes a mechanism for inheritance (genetic or cultural) of strategies.</p>
""" },
  { path: """models/Sample Models/Social Science/Traffic Basic.nlogo""", info: """<p>This model models the movement of cars on a highway. Each car follows a simple set of rules: it slows down (decelerates) if it sees a car close ahead, and speeds up (accelerates) if it doesn&rsquo;t see a car ahead. The model demonstrates how traffic jams can form even without any accidents, broken bridges, or overturned trucks.  No &ldquo;centralized cause&rdquo; is needed for a traffic jam to form.</p>
""" },
  { path: """models/Sample Models/Social Science/Sugarscape/Sugarscape 3 Wealth Distribution.nlogo""", info: """<p>This third model in the NetLogo Sugarscape suite implements Epstein &amp; Axtell&rsquo;s Sugarscape Wealth Distribution model, as described in chapter 2 of their book Growing Artificial Societies: Social Science from the Bottom Up. It provides a ground-up simulation of inequality in wealth. Only a minority of the population have above average wealth, while most agents have wealth near the same level as the initial endowment.</p>
""" },
  { path: """models/Sample Models/Social Science/Sugarscape/Sugarscape 2 Constant Growback.nlogo""", info: """<p>This second model in the NetLogo Sugarscape suite implements Epstein &amp; Axtell&rsquo;s Sugarscape Constant Growback model, as described in chapter 2 of their book Growing Artificial Societies: Social Science from the Bottom Up. It simulates a population with limited, spatially-distributed resources available. It differs from Sugarscape 1 Immediate Growback in that the growback of sugar is gradual rather than instantaneous.</p>
""" },
  { path: """models/Sample Models/Social Science/Sugarscape/Sugarscape 1 Immediate Growback.nlogo""", info: """<p>This first model in the NetLogo Sugarscape suite implements Epstein &amp; Axtell&rsquo;s Sugarscape Immediate Growback model, as described in chapter 2 of their book Growing Artificial Societies: Social Science from the Bottom Up. It simulates a population with limited, spatially-distributed resources available.</p>
""" },
  { path: """models/Sample Models/Social Science/Wealth Distribution.nlogo""", info: """<p>This model simulates the distribution of wealth.  &ldquo;The rich get richer and the poor get poorer&rdquo; is a familiar saying that expresses inequity in the distribution of wealth.  In this simulation, we see Pareto&rsquo;s law, in which there are a large number of &ldquo;poor&rdquo; or red people, fewer &ldquo;middle class&rdquo; or green people, and many fewer &ldquo;rich&rdquo; or blue people.</p>
""" },
  { path: """models/Sample Models/Biology/Sunflower.nlogo""", info: """<p>The interlocking spirals found in the seeds, petals and even branches of many plants occur naturally through the growth of the flower.  This model attempts to demonstrate the growth of these naturally occurring spirals.</p>
""" },
  { path: """models/Sample Models/Biology/Fairy Circles.nlogo""", info: """<p>This model is inspired by the natural phenomenon, Fairy Circles, which can be observed in the Namib Desert in Namibia. In the real world, rings of healthy grasses with barren centers form in geometric configurations across the desert plains. These rings, with life cycles of 30-40 years, have been studied by biologists for years.</p>
""" },
  { path: """models/Sample Models/Biology/Moths.nlogo""", info: """<p>This model demonstrates moths flying in circles around a light.  Each moth follows a set of simple rules.  None of the rules specify that the moth should seek and then circle a light.  Rather, the observed pattern arises out of the combination of the moth&rsquo;s random flight and the simple behavioral rules described below.</p>
""" },
  { path: """models/Sample Models/Biology/HIV.nlogo""", info: """<p>This model simulates the spread of the human immunodeficiency virus (HIV), via sexual transmission, through a small isolated human population.  It therefore illustrates the effects of certain sexual practices across a population.</p>
""" },
  { path: """models/Sample Models/Biology/Honeycomb.nlogo""", info: """<p>How are groups of bees able to build their honeycombs out of perfect hexagons?  This model illustrates one hypothesis for a possible mechanism.</p>
""" },
  { path: """models/Sample Models/Biology/Blood Sugar Regulation.nlogo""", info: """<p>This is an agent-based model of blood glucose regulation by the liver and pancreas through the production of the hormones insulin and glucagon.</p>
""" },
  { path: """models/Sample Models/Biology/Autumn.nlogo""", info: """<p>If you live in a climate that is warm during the summer and cold in the winter, then you are probably familiar with the beautiful autumn phenomenon in which leaves turn color before dying and falling off of the tree.  This model simulates the ways in which leaves change their colors and fall, making it possible to explore and understand this beautiful annual spectacle.</p>
""" },
  { path: """models/Sample Models/Biology/Flocking.nlogo""", info: """<p>This model is an attempt to mimic the flocking of birds.  (The resulting motion also resembles schools of fish.)  The flocks that appear in this model are not created or led in any way by special leader birds.  Rather, each bird is following exactly the same set of rules, from which flocks emerge.</p>
""" },
  { path: """models/Sample Models/Biology/Disease Solo.nlogo""", info: """<p>Disease Solo is a one-player version of the HubNet activity Disease.  It simulates the spread of a disease through a population.  One agent in the population is a person controlled by the user; the others are &ldquo;androids&rdquo; controlled by the computer.</p>
""" },
  { path: """models/Sample Models/Biology/BeeSmart Hive Finding.nlogo""", info: """<p>The BeeSmart Master model shows the swarm intelligence of honeybees during their hive-finding process. A swarm of tens of thousands of honeybees can accurately pick the best new hive site available among dozens of potential choices through self-organizing behavior.</p>
""" },
  { path: """models/Sample Models/Biology/Simple Birth Rates.nlogo""", info: """<p>This is a simple model of population genetics.  There are two populations, the REDS and the BLUES. Each has settable birth rates.  The reds and blues move around and reproduce according to their birth rates.  When the carrying capacity of the terrain is exceeded, some agents die (each agent has the same chance of being selected for death) to maintain a relatively constant population.  The model allows you to explore how differential birth rates affect the ratio of reds to blues.</p>
""" },
  { path: """models/Sample Models/Biology/Heatbugs.nlogo""", info: """<p>Heatbugs is an abstract model of the behavior of biologically-inspired agents that attempt to maintain an optimum temperature around themselves.  It demonstrates how simple rules defining the behavior of agents can produce several different kinds of emergent behavior.</p>
""" },
  { path: """models/Sample Models/Biology/Shepherds.nlogo""", info: """<p>This project is inspired by two simpler models: one of termites gathering wood chips into piles and one of moving sheep.  In this project, sheep wander randomly while shepherds circulate trying to herd them.  Whether or not the sheep eventually end up in a single herd depends on the number of shepherds and how fast they move compared to the sheep.</p>
""" },
  { path: """models/Sample Models/Biology/Ants.nlogo""", info: """<p>In this project, a colony of ants forages for food. Though each ant follows a set of simple rules, the colony as a whole acts in a sophisticated way.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Vision Evolution.nlogo""", info: """<p>This model explores the potential relationship between our early ancestors&rsquo; transition from water to land and the evolution of their eyes.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Rock Paper Scissors.nlogo""", info: """<p>This model explores the role of movement and space in a three species ecosystem. The system consists of three species, represented by red patches, green patches, and blue patches, which compete over space. The interactions between the species are based on the game Rock-Paper-Scissors. That is, red beats green, green beats blue, and blue beats red. Organisms compete with their neighbors, move throughout the environment, and reproduce. These interactions result in spiral patterns whose size and stability depends on the movement rate of the organisms.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Anisogamy.nlogo""", info: """<p>This model is a thought experiment related to the evolution of the two sexes as we know them: males producing numerous small sperm cells and females producing only a handful of big egg cells.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Mammoths.nlogo""", info: """<p>A prevailing theory says that Native Americans descended from prehistoric hunters who walked from northeast Asia across a land bridge, formed at the end of the Ice Age, to Alaska some 12,000 years ago. Fossil evidence shows that before their arrival, there were large mammals in the Americas. The oldest mammoth fossils date the mammoths to 11,400 years ago, a little over a thousand years after the migration. This model illustrates two theories of how these megafaunal species quickly became extinict: the hunting theory and the climate change theory.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Bug Hunt Camouflage.nlogo""", info: """<p>This is a model of natural/artificial selection that shows how a population hunted by a predator can develop camouflaging.  For example, in a forest with green leaves, green bugs may emerge as the predominant bug color.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Cooperation.nlogo""", info: """<p>This model (and Altruism and Divide the Cake) are part of the EACH unit (&ldquo;Evolution of Altruistic and Cooperative Habits: Learning About Complexity in Evolution&rdquo;).  See <a href="http://ccl.northwestern.edu/rp/each/index.shtml" target="_blank">http://ccl.northwestern.edu/rp/each/index.shtml</a> for more information on the EACH unit. The EACH unit is embedded within the BEAGLE (Biological Experiments in Adaptation, Genetics, Learning and Evolution) evolution curriculum. See <a href="http://ccl.northwestern.edu/rp/beagle/index.shtml" target="_blank">http://ccl.northwestern.edu/rp/beagle/index.shtml</a>.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Sunflower Biomorphs.nlogo""", info: """<p>A model of evolution where the user provides the selective pressure.  The user picks one or two flowers from a grid of randomly generated animated flowers.  The selected flowers become the &ldquo;parents&rdquo; of the next generation.  Over time, the user&rsquo;s selections cause the characteristics of the population to change.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Bug Hunt Speeds.nlogo""", info: """<p>This is a natural/artificial selection model that shows the result of two competing forces on natural selection of the speed of prey.  Which force dominates depends on the behavior of predators.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Bacterial Infection.nlogo""", info: """<p>This is a natural/artificial selection model that shows how a population of bacteria can become more antibiotic resistant over time.  The model represents an environment in a patient taking a regiment of antibiotics.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Echo.nlogo""", info: """<p>Echo is a model about the evolution of fitness, adapted from John Holland&rsquo;s book <em>Hidden Order</em> (1995).  It can be used to facilitate experiments in a variety of domains where an agent&rsquo;s fitness varies with its context.  This particular adaptation of Echo  has a biological flavor and refers to the agents as &ldquo;creatures&rdquo;, and groups of agents with identical mating preferences as &ldquo;species.&rdquo;</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Peppered Moths.nlogo""", info: """<p>This project models a classic example of natural selection - the peppered moths of Manchester, England. The peppered moths use their coloration as camouflage from the birds that would eat them. (Note that in this model, the birds act invisibly.) Historically, light-colored moths predominated because they blended in well against the white bark of the trees they rested on.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Genetic Drift/GenDrift P global.nlogo""", info: """<p>This model is an example of random selection.  It shows that patches that randomly exchange colors converge on a single color. The idea, explained in more detail in Dennett&rsquo;s &ldquo;Darwin&rsquo;s Dangerous Idea&rdquo;, is that trait drifts can occur without any particular purpose or &lsquo;selecting pressure&rsquo;. In this version of the model, exchange of color can occur between any two patches.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Genetic Drift/GenDrift T reproduce.nlogo""", info: """<p>This model is an example of genetic drift.  It shows that competing breeds of turtles, each reproducing with equal likelihood on each turn, will ultimately converge on one breed without any selection pressure forcing this convergence.  The idea, explained in more detail in Dennett&rsquo;s &ldquo;Darwin&rsquo;s Dangerous Idea&rdquo;, is that trait drifts can occur without any particular purpose or &lsquo;selecting pressure&rsquo;.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Genetic Drift/GenDrift P local.nlogo""", info: """<p>This model is an example of random selection.  It shows that patches that randomly exchange colors converge on a single color. The idea, explained in more detail in Dennett&rsquo;s &ldquo;Darwin&rsquo;s Dangerous Idea&rdquo;, is that trait drifts can occur without any particular purpose or &lsquo;selecting pressure&rsquo;. In this version of the model, exchange of color can only occur between neighboring patches.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Genetic Drift/GenDrift T interact.nlogo""", info: """<p>This model is an example of random selection. It shows that turtles that randomly exchange colors converge on a single color.  The idea, explained in more detail in Dennett&rsquo;s &ldquo;Darwin&rsquo;s Dangerous Idea&rdquo;, is that trait drifts can occur without any particular purpose or &ldquo;selective pressure&rdquo;.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Unverified/Divide The Cake.nlogo""", info: """<p>This model (and Cooperation and Altruism) are part of the EACH unit (&ldquo;Evolution of Altruistic and Cooperative Habits: Learning About Complexity in Evolution&rdquo;). See <a href="http://ccl.northwestern.edu/rp/each/index.shtml" target="_blank">http://ccl.northwestern.edu/rp/each/index.shtml</a> for more information on the EACH unit. The EACH unit is embedded within the BEAGLE (Biological Experiments in Adaptation, Genetics, Learning and Evolution) evolution curriculum. See <a href="http://ccl.northwestern.edu/rp/beagle/index.shtml" target="_blank">http://ccl.northwestern.edu/rp/beagle/index.shtml</a>.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Altruism.nlogo""", info: """<p>This model (and Cooperation and Divide the Cake) are part of the EACH unit (&ldquo;Evolution of Altruistic and Cooperative Habits: Learning About Complexity in Evolution&rdquo;).  See <a href="http://ccl.northwestern.edu/rp/each/index.shtml" target="_blank">http://ccl.northwestern.edu/rp/each/index.shtml</a> for more information on the EACH unit. The EACH unit is embedded within the BEAGLE (Biological Experiments in Adaptation, Genetics, Learning and Evolution) evolution curriculum. See <a href="http://ccl.northwestern.edu/rp/beagle/index.shtml" target="_blank">http://ccl.northwestern.edu/rp/beagle/index.shtml</a>.</p>
""" },
  { path: """models/Sample Models/Biology/Evolution/Mimicry.nlogo""", info: """<p>Batesian mimicry is an evolutionary relationship in which a harmless species (the mimic) has evolved so that it looks very similar to a completely different species that isn&rsquo;t harmless (the model).  A classic example of Batesian mimicry is the similar appearance of monarch butterflies and viceroy moths. Monarchs and viceroys are unrelated species that are both colored similarly &mdash; bright orange with black patterns. Their colorations are so similar, in fact, that the two species are virtually indistinguishable from one another.</p>
""" },
  { path: """models/Sample Models/Biology/Sunflower Emergent.nlogo""", info: """<p>This model shows the characteristic double spiral formation we see in many plants.  Most plants have leaves that spiral up the stem, appearing as a double spiral when viewed from above. This same double spiral is also seen in flower heads such as sunflowers and pine cones.</p>
""" },
  { path: """models/Sample Models/Biology/Fireflies.nlogo""", info: """<p>This model demonstrates a population of fireflies which synchronize their flashing using only the interactions between the individual fireflies. It is a good example of how a distributed system (i.e. a system with many interacting elements, but no &lsquo;leader&rsquo;) can coordinate itself without any central coordinator.</p>
""" },
  { path: """models/Sample Models/Biology/Membrane Formation.nlogo""", info: """<p>This model simulates the formation of membranes in water. It shows how simple attractive and repulsive forces between different kinds of molecules can result in higher level structure. For more information about natural membranes, see <a href="https://en.wikipedia.org/wiki/Lipid_bilayer" target="_blank">https://en.wikipedia.org/wiki/Lipid_bilayer</a>.</p>
""" },
  { path: """models/Sample Models/Biology/Unverified/Algae.nlogo""", info: """<p>This is a model of a simplified aquatic ecosystem consisting of a column of water containing algae, light, and nutrients.  There is more light at the top but more food at the bottom, so algae move up and down to balance their needs.</p>
""" },
  { path: """models/Sample Models/Biology/Unverified/Wolf Sheep Stride Inheritance.nlogo""", info: """<p>This model is a variation on the predator-prey ecosystems model wolf-sheep predation.</p>
""" },
  { path: """models/Sample Models/Biology/Unverified/Plant Growth.nlogo""", info: """<p>Plants have the interesting tendency to &ldquo;find&rdquo; resources in their environment. It is not uncommon to see plants whose leaves and stalks have bent over time in the direction of nearby sunlight, or plants that have grown long roots directed to a nearby source of moisture. It almost seems as if these plants are actually scanning the environment around them to find stable sources of nutrients. Since plants do not have eyes, we might ask how they are able to accomplish this.</p>
""" },
  { path: """models/Sample Models/Biology/Virus.nlogo""", info: """<p>This model simulates the transmission and perpetuation of a virus in a human population.</p>
""" },
  { path: """models/Sample Models/Biology/Ant Lines.nlogo""", info: """<p>This project models the behavior of ants following a leader towards a food source. The leader ant moves towards the food along a random path; after a small delay, the second ant in the line follows the leader by heading directly towards where the leader is located. Each subsequent ant follows the ant ahead of it in the same manner.</p>
""" },
  { path: """models/Sample Models/Biology/Rabbits Grass Weeds.nlogo""", info: """<p>This project explores a simple ecosystem made up of rabbits, grass, and weeds. The rabbits wander around randomly, and the grass and weeds grow randomly.   When a rabbit bumps into some grass or weeds, it eats the grass and gains energy. If the rabbit gains enough energy, it reproduces. If it doesn&rsquo;t gain enough energy, it dies.</p>
""" },
  { path: """models/Sample Models/Biology/Muscle Development.nlogo""", info: """<p>This is an exercise physiology model.  It is intended to help you understand the factors involved in generating the appropriate hormonal balance to develop muscle from weight lifting.  These factors include:</p>
""" },
  { path: """models/Sample Models/Biology/Slime.nlogo""", info: """<p>This model is inspired by the aggregation behavior of slime-mold cells.</p>
""" },
  { path: """models/Sample Models/Biology/Wolf Sheep Predation.nlogo""", info: """<p>This model explores the stability of predator-prey ecosystems. Such a system is called unstable if it tends to result in extinction for one or more species involved.  In contrast, a system is stable if it tends to maintain itself over time, despite fluctuations in population sizes.</p>
""" },
  { path: """models/Sample Models/Biology/Tumor.nlogo""", info: """<p>This model illustrates the growth of a tumor and how it resists chemical treatment.  A tumor consists of two kinds of cells: stem cells (blue turtles) and transitory cells (all other turtles).</p>
""" },
  { path: """models/Sample Models/Biology/Daisyworld.nlogo""", info: """<p>This model explores the &ldquo;Gaia hypothesis&rdquo;, which considers the Earth as a single, self-regulating system including both living and non-living parts. In particular, this model explores how living organisms both alter and are altered by climate, which is non-living. The example organisms are daisies and the climatic factor considered is temperature.</p>
""" },
  { path: """models/Sample Models/Biology/Flocking Vee Formations.nlogo""", info: """<p>This is an adaptation of the Flocking model to produce V-like formations in artificial flocks.  Not all birds produce V-like formations when they flock, but they are often observed in large birds traveling together distances (e.g. migrating Canada geese).  This model demonstrates simple rules that cause V-formations to occur.</p>
""" },
  { path: """models/Sample Models/Biology/Fur.nlogo""", info: """<p>Does a single mechanism underlies such diverse patterns such as the stripes on a zebra, the spots on a leopard, and the blobs on a giraffe?  This model is a possible explanation of how the patterns on animals&rsquo; skin self-organize. It was first proposed by Alan Turing. If the model is right, then even though the animals may appear to have altogether different patterns, the rules underlying the formation of these patterns are the same and only some of the parameters (the numbers that the rules work on) are slightly different.</p>
""" },
  { path: """models/Sample Models/Biology/Termites.nlogo""", info: """<p>This project is inspired by the behavior of termites gathering wood chips into piles. The termites follow a set of simple rules. Each termite starts wandering randomly. If it bumps into a wood chip, it picks the chip up, and continues to wander randomly. When it bumps into another wood chip, it finds a nearby empty space and puts its wood chip down.  With these simple rules, the wood chips eventually end up in a single pile.</p>
""" },
  { path: """models/IABM Textbook/chapter 7/Voting Component Verification.nlogo""", info: """<p>This model is a simple cellular automaton that simulates voting distribution by having each patch take a &ldquo;vote&rdquo; of its eight surrounding neighbors, then perhaps change its own vote according to the outcome. The component verification extension adds the CHECK-SETUP procedure which examines whether or not the initial conditions of the model exceed the expected initial conditions.</p>
""" },
  { path: """models/IABM Textbook/chapter 7/Voting Sensitivity Analysis.nlogo""", info: """<p>This model is a simple cellular automaton that simulates voting distribution by having each patch take a &ldquo;vote&rdquo; of its eight surrounding neighbors, then perhaps change its own vote according to the outcome. The sensitivity version of this model alters the original model by allowing the user to specify the initial percentage of the green patches in the model and to test whether the model&rsquo;s behavior is sensitive to the initial percentages of the colors.</p>
""" },
  { path: """models/IABM Textbook/chapter 0/Turtles Circling Simple.nlogo""", info: """<p>This is a kind of mathematical investigation — we are investigating the emergent shape created by the movement of many turtles (arrows) moving independently in simple ways. Each turtle is moving a little step forward and taking a little turn right to stay on a circle of radius 20.  What happens if the we slightly increase the step forward they are taking  in mid-action? Guess before you try it.</p>
""" },
  { path: """models/IABM Textbook/chapter 8/Disease With Android Avoidance HubNet.nlogo""", info: """<p>This model is a slight variant of the DISEASE-HUBNET model in the NetLogo models library. It extends that model by allowing androids to have 3 distinct behaviors.</p>
""" },
  { path: """models/IABM Textbook/chapter 8/Run Example.nlogo""", info: """<p>This model illustrates how to use the <code>run</code> command in NetLogo, which enables the runtime execution of different commands that are encoded as text. This is often useful if you want to construct turtle commands on the fly.</p>
""" },
  { path: """models/IABM Textbook/chapter 8/Arduino Example.nlogo""", info: """<p>This model should give a sense for the process of controlling an Arduino board with NetLogo. It demonstrates how to read numbers from the Arduino board and how to use NetLogo to turn the Arduino&rsquo;s onboard LED on or off. The LED is located next to pin 13 and connected to that pin.</p>
""" },
  { path: """models/IABM Textbook/chapter 8/Sandpile Simple.nlogo""", info: """<p>The Bak–Tang–Wiesenfeld sandpile model demonstrates the concept of &ldquo;self-organized criticality&rdquo;. It further demonstrates that complexity can emerge from simple rules and that a system can arrive at a critical state spontaneously rather than through the fine tuning of precise parameters. This is a simplified version of the original Sandpile model.</p>
""" },
  { path: """models/IABM Textbook/chapter 8/Simple Machine Learning.nlogo""", info: """<p>This model illustrates how to integrate machine learning with agent-based modeling. The model creates a set of turtles whose goal is to get to the upper right corner of the world. The turtles start with random strategies, but the model then uses an evolutionary approach they improve their strategies over time to reach this corner.</p>
""" },
  { path: """models/IABM Textbook/chapter 8/Run Result Example.nlogo""", info: """<p>This model illustrates how to use the RUN-RESULT command in NetLogo, which enables the runtime execution of different commands that are encoded as text and reports a result.</p>
""" },
  { path: """models/IABM Textbook/chapter 8/Example HubNet.nlogo""", info: """<p>This model provides the basic structure of the code for a HubNet model. For this reason, the model is very simple: all that each participant can do is move their turtle around the world.</p>
""" },
  { path: """models/IABM Textbook/chapter 8/Simple Viral Marketing.nlogo""", info: """<p>This model is a simple experiment that allows researchers to examine how to best seed a network to maximize the adoption rate of a product by using viral marketing.</p>
""" },
  { path: """models/IABM Textbook/chapter 8/Ticket Sales.nlogo""", info: """<p>The general intent of this model is to simulate how individuals within a limited geographic region decide to buy tickets to a live event.</p>
""" },
  { path: """models/IABM Textbook/chapter 1/Ants Simple.nlogo""", info: """<p>In this model, a colony of ants forages for food. Though each ant follows a set of simple rules, the colony as a whole acts in a sophisticated way.</p>
""" },
  { path: """models/IABM Textbook/chapter 6/Spread of Disease.nlogo""", info: """<p>This model explores the spread of disease in a number of different conditions and environments. In particular, it explores how making assumptions about the interactions of agents can drastically affect the results of the model.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/DLA Extensions/DLA Simple Extension 2.nlogo""", info: """<p>Like the main DLA model, this model demonstrates diffusion-limited aggregation, in which particles moving (diffusing) in random trajectories stick together (aggregate) to form beautiful treelike branching fractal structures. There are many patterns found in nature that resemble the patterns produced by this model: crystals, coral, fungi, lightning, and so on. This model extends the DLA Simple Extension 1 model because particles are more likely to stick if there are more neighbors to the empty square.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/DLA Extensions/DLA Simple.nlogo""", info: """<p>Like the main DLA model, this model demonstrates diffusion-limited aggregation, in which particles moving (diffusing) in random trajectories stick together (aggregate) to form beautiful treelike branching fractal structures. There are many patterns found in nature that resemble the patterns produced by this model: crystals, coral, fungi, lightning, and so on.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/DLA Extensions/DLA Simple Extension 1.nlogo""", info: """<p>Like the main DLA model, this model demonstrates diffusion-limited aggregation, in which particles moving (diffusing) in random trajectories stick together (aggregate) to form beautiful treelike branching fractal structures. There are many patterns found in nature that resemble the patterns produced by this model: crystals, coral, fungi, lightning, and so on. This model extends the DLA Simple model because particles are not guaranteed to stick to each other, but are instead affected by a probability.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/DLA Extensions/DLA Simple Extension 3.nlogo""", info: """<p>Like the main DLA model, this model demonstrates diffusion-limited aggregation, in which particles moving (diffusing) in random trajectories stick together (aggregate) to form beautiful treelike branching fractal structures. There are many patterns found in nature that resemble the patterns produced by this model: crystals, coral, fungi, lightning, and so on. This model extends the DLA Simple Extension 2 model because it allows for multiple seeds rather than the original model which only had one seed.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/Fire Extensions/Fire Simple.nlogo""", info: """<p>This model simulates the spread of a fire through a forest.  It shows that the fire&rsquo;s chance of reaching the right edge of the forest depends critically on the density of trees. This is an example of a common feature of complex systems, the presence of a non-linear threshold or critical parameter.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/Fire Extensions/Fire Simple Extension 1.nlogo""", info: """<p>This project simulates the spread of a fire through a forest.  It shows that the fire&rsquo;s chance of reaching the right edge of the forest depends critically on the density of trees. This is an example of a common feature of complex systems, the presence of a non-linear threshold or critical parameter. This model extends the Fire Simple model by adding a PROBABILITY-OF-SPREAD.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/Fire Extensions/Fire Simple Extension 3.nlogo""", info: """<p>This project simulates the spread of a fire through a forest.  It shows that the fire&rsquo;s chance of reaching the right edge of the forest depends critically on the density of trees. This is an example of a common feature of complex systems, the presence of a non-linear threshold or critical parameter. This model extends the Fire Simple Extension 2 model by adding BIG-JUMPS.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/Fire Extensions/Fire Simple Extension 2.nlogo""", info: """<p>This project simulates the spread of a fire through a forest.  It shows that the fire&rsquo;s chance of reaching the right edge of the forest depends critically on the density of trees. This is an example of a common feature of complex systems, the presence of a non-linear threshold or critical parameter. This model extends the Fire Simple Extension 1 model by adding wind.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/El Farol Extensions/El Farol Extension 2.nlogo""", info: """<p>El Farol is a bar in Santa Fe, New Mexico.  The bar is popular &mdash; especially on Thursday nights when they offer Irish music &mdash; but sometimes becomes overcrowded and unpleasant. In fact, if the patrons of the bar think it will be overcrowded they stay home; otherwise they go enjoy themselves at El Farol.  This model explores what happens to the overall attendance at the bar on these popular Thursday evenings, as the patrons use different strategies for determining how crowded they think the bar will be. This version extends the El Farol Extension 1 model by adding additional monitors to examine the distribution of rewards earned by the agents.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/El Farol Extensions/El Farol Extension 3.nlogo""", info: """<p>El Farol is a bar in Santa Fe, New Mexico.  The bar is popular &mdash; especially on Thursday nights when they offer Irish music &mdash; but sometimes becomes overcrowded and unpleasant. In fact, if the patrons of the bar think it will be overcrowded they stay home; otherwise they go enjoy themselves at El Farol.  This model explores what happens to the overall attendance at the bar on these popular Thursday evenings, as the patrons use different strategies for determining how crowded they think the bar will be. This version extends the El Farol Extension 2 model by adding a histogram of the reward values.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/El Farol Extensions/El Farol Extension 1.nlogo""", info: """<p>El Farol is a bar in Santa Fe, New Mexico.  The bar is popular &mdash; especially on Thursday nights when they offer Irish music &mdash; but sometimes becomes overcrowded and unpleasant. In fact, if the patrons of the bar think it will be overcrowded they stay home; otherwise they go enjoy themselves at El Farol.  This model explores what happens to the overall attendance at the bar on these popular Thursday evenings, as the patrons use different strategies for determining how crowded they think the bar will be. This version extends the El Farol model by changing the color of agents that attend the bar more often. The agents who have visited more are darker red.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/El Farol Extensions/El Farol.nlogo""", info: """<p>El Farol is a bar in Santa Fe, New Mexico.  The bar is popular &mdash; especially on Thursday nights when they offer Irish music &mdash; but sometimes becomes overcrowded and unpleasant. In fact, if the patrons of the bar think it will be overcrowded they stay home; otherwise they go enjoy themselves at El Farol.  This model explores what happens to the overall attendance at the bar on these popular Thursday evenings, as the patrons use different strategies for determining how crowded they think the bar will be.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/Segregation Extensions/Segregation Simple Extension 3.nlogo""", info: """<p>This project models the behavior of two types of turtles in a mythical pond. The red turtles and green turtles get along with one another. But each turtle wants to make sure that it lives near some of &ldquo;its own.&rdquo; That is, each red turtle wants to live near at least some red turtles, and each green turtle wants to live near at least some green turtles. The simulation shows how these individual preferences ripple through the pond, leading to large-scale patterns. This model is an extension of the Segregation Simple Extension 2 model. It adds a constraint that agents also want to have a minimum number of different agents around them.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/Segregation Extensions/Segregation Simple Extension 1.nlogo""", info: """<p>This project models the behavior of turtles of different ethnicities in a mythical pond. All the turtles get along with each other. But each turtle wants to make sure that it lives near some of &ldquo;its own.&rdquo; The simulation shows how these individual preferences ripple through the pond, leading to large-scale patterns.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/Segregation Extensions/Segregation Simple Extension 2.nlogo""", info: """<p>This project models the behavior of turtles of different ethnicities in a mythical pond. All the turtles get along with each other. But each turtle wants to make sure that it lives near some of “its own.” The simulation shows how these individual preferences ripple through the pond, leading to large-scale patterns.</p>
""" },
  { path: """models/IABM Textbook/chapter 3/Segregation Extensions/Segregation Simple.nlogo""", info: """<p>This project models the behavior of two types of turtles in a mythical pond. The red turtles and green turtles get along with one another. But each turtle wants to make sure that it lives near some of &ldquo;its own.&rdquo; That is, each red turtle wants to live near at least some red turtles, and each green turtle wants to live near at least some green turtles. The simulation shows how these individual preferences ripple through the pond, leading to large-scale patterns.</p>
""" },
  { path: """models/IABM Textbook/chapter 4/Wolf Sheep Simple 2.nlogo""", info: """<p>This is the second model in a set of five models that build toward a predator prey model of population dynamics.  This second model gives the sheep energy, and has them decrement their energy as they move around.   It also plots the number of sheep over time.</p>
""" },
  { path: """models/IABM Textbook/chapter 4/Wolf Sheep Simple 4.nlogo""", info: """<p>This is the fourth model in a set of five models that build towards a predator prey model of population dynamics.  This fourth model gives the sheep the ability to reproduce.</p>
""" },
  { path: """models/IABM Textbook/chapter 4/Wolf Sheep Simple 3.nlogo""", info: """<p>This is the third model in a set of five models that build toward a predator prey model of population dynamics.  This third model gives the sheep the ability to eat grass and has the grass regrow over time.</p>
""" },
  { path: """models/IABM Textbook/chapter 4/Wolf Sheep Simple 1.nlogo""", info: """<p>This is the first model in a set of five models in chapter four of the textbook that build toward a predator prey model of population dynamics.  This first model creates a population of sheep and gives them &ldquo;wiggly&rdquo; movement.</p>
""" },
  { path: """models/IABM Textbook/chapter 4/Wolf Sheep Simple 5.nlogo""", info: """<p>This is the fifth model in a set of models that build towards a predator prey model of population dynamics.  This fifth model adds wolves and completes the predator prey model.</p>
""" },
  { path: """models/IABM Textbook/chapter 5/Traffic Basic Adaptive.nlogo""", info: """<p>This model models the movement of cars on a highway. Each car follows a simple set of rules: it slows down (decelerates) if it sees a car close ahead, and speeds up (accelerates) if it doesn&rsquo;t see a car ahead. The model extends the Traffic Basic model, from the social science section of the NetLogo models library, by having cars adapt their acceleration to try and maintain a smooth flow of traffic.</p>
""" },
  { path: """models/IABM Textbook/chapter 5/Agentset Ordering.nlogo""", info: """<p>NetLogo has two different kinds of agentsets: constructed agentsets, that act as a &lsquo;snapshot&rsquo; of a particular set of turtles at a particular point in time, and special agentsets that always contain the most updated list of turtles.</p>
""" },
  { path: """models/IABM Textbook/chapter 5/Communication-T-T Network Example.nlogo""", info: """<p>This code example is a variation on the Communication-T-T Example in the Code Examples section of the NetLogo models library. In the original code example, the turtles passed messages to nearby turtles. In this version, the turtles pass messages through a network. One turtle starts out with a message (the red turtle) and she spreads the message to other turtles she is linked with. When a turtle gets the message, it turns red.</p>
""" },
  { path: """models/IABM Textbook/chapter 5/Agentset Efficiency.nlogo""", info: """<p>This model addresses a couple of concerns that can arise when using agentsets, in particular when filtering them using the &ldquo;<code>with</code>&rdquo; primitive. The first of these concerns has to do with efficiency: it is best to avoid building the same agentset multiple times. The second concern has to do with the timing of side effects: rebuilding an agentset using the same condition can lead to different results if the state of the agents has changed in the meanwhile.</p>
""" },
  { path: """models/IABM Textbook/chapter 5/Traffic Basic Adaptive Individuals.nlogo""", info: """<p>This model models the movement of cars on a highway. Each car follows a simple set of rules: it slows down (decelerates) if it sees a car close ahead, and speeds up (accelerates) if it doesn&rsquo;t see a car ahead. The model extends the Traffic Basic model, from the social science section of the NetLogo models library, by having cars adapt their acceleration to try and maintain a smooth flow of traffic. It differs from the Traffic Basic Adaptive model in that this model has each car adapting individually, whereas that model has all cars adapting in unison.</p>
""" },
  { path: """models/IABM Textbook/chapter 5/Traffic Grid Goal.nlogo""", info: """<p>The Traffic Grid Goal model simulates traffic moving in a city grid. It allows you to control traffic lights and global variables, such as the speed limit and the number of cars, and explore traffic dynamics.</p>
""" },
  { path: """models/IABM Textbook/chapter 5/Random Network.nlogo""", info: """<p>The theory of random networks was first introduced by mathematicians Paul Erdős and Alfréd Rényi in 1959. There are several different models for random networks. The most well known are two variants called Erdős–Rényi networks. This model shows four different ways to create random networks, 2 of which create the variants of the classic Erdős–Rényi networks.</p>
""" },
  { path: """models/IABM Textbook/chapter 5/Traffic Basic Utility.nlogo""", info: """<p>This model models the movement of cars on a highway. Each car follows a simple set of rules: it slows down (decelerates) if it sees a car close ahead, and speeds up (accelerates) if it doesn&rsquo;t see a car ahead. Cars start at a random speed between 0.1 and 1. This model extends the Traffic Basic model, from the social science section of the NetLogo models library, to include a utility function for the cars.</p>
""" },
  { path: """models/IABM Textbook/chapter 5/Preferential Attachment Simple.nlogo""", info: """<p>This is a simplified version of the Preferential Attachment model in the networks section of the NetLogo models library. It generates a network where the probability of a new link being connected to a node is proportional to the number of links the node already has.</p>
""" },
  { path: """models/IABM Textbook/chapter 2/Life Simple.nlogo""", info: """<p>This program is a simple example of the Life model, which is a 2D cellular automaton.</p>
""" },
  { path: """models/IABM Textbook/chapter 2/Simple Economy.nlogo""", info: """<p>This model is a very simple model of economic exchange.  It is a thought experiment of  a world where, in every time step, each person gives one dollar to one other person (at random) if they have any money to give.  If they have no money then they do not give out any money.</p>
""" },
  { path: """models/IABM Textbook/chapter 2/Heroes and Cowards.nlogo""", info: """<p>The &ldquo;Heroes and Cowards&rdquo; game, also called the &ldquo;Friends and Enemies&rdquo; game or the &ldquo;Aggressors and Defenders&rdquo; game dates back to the Fratelli Theater Group at the 1999 Embracing Complexity conference, or perhaps earlier.</p>
""" },
  { path: """models/Curricular Models/NIELS/Parallel Circuit.nlogo""", info: """<p>This model offers a microscopic view of electrical conduction in two wires that are connected in parallel to each other across two terminals of a battery. It shows that current in each wire is not always equal to current in the other wire, unlike in a series circuit (see Series Circuit model). However, since each of the wires is connected across the same battery terminals, voltage is the same in each wire.</p>
""" },
  { path: """models/Curricular Models/NIELS/Electron Sink.nlogo""", info: """<p>This is a simplified model of electrical conduction based on Drude&rsquo;s free electron theory. It shows how electric current in a circuit consisting of a resistive wire connected across two terminals of a battery can be represented as a process of accumulation of free-electrons inside the battery-positive.</p>
""" },
  { path: """models/Curricular Models/NIELS/Current in a Wire.nlogo""", info: """<p>This model shows a simplified microscopic picture of electrical conduction inside a wire connected across two battery terminals. It is based on Drude&rsquo;s free electron theory, and shows how electric current emerges from the collective movement of many electrons inside a wire.</p>
""" },
  { path: """models/Curricular Models/NIELS/Current in a Wire HubNet.nlogo""", info: """<p>This model is an extension of the <em>Current in a Wire</em> model that adds two elements: temperature and HubNet interactivity. Just like <em>Current in a Wire</em>, this model visualizes the flow of electrons, caused by a voltage difference between two ends of a wire. The electrons are constantly accelerated by the applied voltage meaning they acquire some kinetic energy as they move towards the positive end of the wire. However, as they flow, the electrons collide with the nuclei of the material the wire is made of, in other words, they encounter <em>resistance</em>. In these collisions, some of the kinetic energy of the electrons is transformed into heat energy which is absorbed by the wire.</p>
""" },
  { path: """models/Curricular Models/NIELS/Electrostatics.nlogo""", info: """<p>This model displays the common natural phenomenon expressed by the Coulomb&rsquo;s inverse-square law.  It shows what happens when the strength of the force between two charges varies inversely with the square of the distance between them.</p>
""" },
  { path: """models/Curricular Models/NIELS/Series Circuit.nlogo""", info: """<p>This is a simplified, microscopic model of electrical conduction in a series circuit with two resistors (wires). It is based on Drude&rsquo;s free electron theory. The primary purpose of the model is to illustrate how electric current in one wire gets to be equal to electric current in the other even when the wires have different resistances: higher number of electrons moving slowly (towards the battery positive) in one wire, and fewer electrons moving faster in the other wire.</p>
""" },
  { path: """models/Curricular Models/Lattice Land/Lattice Land - Triangles Explore.nlogo""", info: """<p><em>Lattice Land - Triangles Explore</em> is one of several models in the Lattice Land software suite. Lattice Land is an interactive MathLand, a microworld in which students can uncover advanced mathematical thinking through play, conjecture, and experimentation. It provides another entryway into geometry, investigating the geometry of a discrete lattice of points. In Lattice Land, there is no one right answer and no pre-determined pathway you must travel. However, even seemingly trivial exercises can quickly become rich explorations.</p>
""" },
  { path: """models/Curricular Models/Lattice Land/Lattice Land - Triangles Dissection.nlogo""", info: """<p><em>Lattice Land -  Triangles Dissection</em> is one of several models in the Lattice Land software suite. Lattice Land is an interactive MathLand, a microworld in which students can uncover advanced mathematical thinking through play, conjecture, and experimentation. It provides another entryway into geometry, investigating the geometry of a discrete lattice of points. In Lattice Land, there is no one right answer and no pre-determined pathway you must travel. However, even seemingly trivial exercises can quickly become rich explorations.</p>
""" },
  { path: """models/Curricular Models/Lattice Land/Lattice Land - Explore.nlogo""", info: """<p><em>Lattice Land - Explore</em> is one of several models in the Lattice Land software suite. Lattice Land is an interactive MathLand, a microworld in which students can uncover advanced mathematical thinking through play, conjecture, and experimentation. It provides another entryway into geometry, investigating the geometry of a discrete lattice of points. In Lattice Land, there is no one right answer and no pre-determined pathway you must travel. However, even seemingly trivial exercises can quickly become rich explorations.</p>
""" },
  { path: """models/Curricular Models/ModelSim/Population Biology/Bug Hunt Predators and Invasive Species - Two Regions.nlogo""", info: """<p>This model explores the stability of consumer producer ecosystems when different  initial populations of predator, prey, and producers are initialized into the model and when different numbers of invasive species are added to the model run.</p>
""" },
  { path: """models/Curricular Models/ModelSim/Population Biology/Bug Hunt Environmental Changes.nlogo""", info: """<p>This model explores the stability of consumer producer ecosystems and both temporary disturbances and more sustained environmental changes affect the stability of the population and the ecosystem.</p>
""" },
  { path: """models/Curricular Models/ModelSim/Population Biology/Bug Hunt Disruptions.nlogo""", info: """<p>This model explores the stability of consumer producer ecosystems in response to temporary disturbances.</p>
""" },
  { path: """models/Curricular Models/ModelSim/Evolution/Bacteria Hunt Speeds.nlogo""", info: """<p>This is a natural/artificial selection model that shows the result of two competing forces from natural selection related to the speed of a prey.</p>
""" },
  { path: """models/Curricular Models/ModelSim/Evolution/Bacteria Food Hunt.nlogo""", info: """<p>This is a natural/artificial selection model that shows how counterbalancing forces of natural selection from the abiotic and biotic environment and from the distribution of resources needed for survival affect the outcomes of natural selection.</p>
""" },
  { path: """models/Curricular Models/ProbLab/4 Block Stalagmites.nlogo""", info: """<p>4-Block Stalagmites is part of the ProbLab middle-school curricular material for learning probability. Related materials are a random generator called a &ldquo;marbles scooper&rdquo; and a sample space called a &ldquo;combinations tower&rdquo;. In classroom activities, students working with 4-Block Stalagmites will have interacted with the marbles box and built its sample space and thus would have inferred expectations as to outcome distributions in hypothetical experiments with the marbles box.</p>
""" },
  { path: """models/Curricular Models/ProbLab/4 Blocks.nlogo""", info: """<p>4-Blocks simulates an empirical probability experiment in which the randomness generator is a compound of 4 squares that each can independently be either green or blue.  The model helps us conceptualize relations between theoretical and empirical aspects of the binomial function: combinatorial analysis (what we can get) and experimentation (what we actually get).</p>
""" },
  { path: """models/Curricular Models/ProbLab/4 Block Two Stalagmites.nlogo""", info: """<p>This model is designed to help students understand the &ldquo;shape&rdquo; of the binomial distribution as resulting from how the elemental events are pooled into aggregate events. The model simulates a probability experiment that involves taking samples consisting of four independent binomial events that are each like a coin. Actual experimental outcomes from running this simulation are shown simultaneously in two representations.</p>
""" },
  { path: """models/Curricular Models/ProbLab/Histo Blocks.nlogo""", info: """<p>This model is a part of the ProbLab curriculum.  The ProbLab Curriculum is currently under development at the Embodied Design Research Laboratory (EDRL), University of California, Berkeley.  For more information about the ProbLab Curriculum please refer to <a href="http://ccl.northwestern.edu/curriculum/ProbLab/" target="_blank">http://ccl.northwestern.edu/curriculum/ProbLab/</a>.</p>
""" },
  { path: """models/Curricular Models/ProbLab/Sampler Solo.nlogo""", info: """<p>SAMPLER Solo is part of the ProbLab curricular models, in which students engage in probability-and-statistics activities as individuals and as a classroom.  SAMPLER stands for Statistics as Multi-Participant Learning-Environment Resource.  It is called &ldquo;multi-participant&rdquo;, because there is a HubNet version of this model, which was created before the solo version was built.</p>
""" },
  { path: """models/Curricular Models/Connected Chemistry/Connected Chemistry 5 Temperature and Pressure.nlogo""", info: """<p>This model explores the relationship between the temperature of a gas and the pressure of a gas in a container with a fixed volume.  This model is part of the &ldquo;Connected Chemistry&rdquo; curriculum <a href="http://ccl.northwestern.edu/curriculum/ConnectedChemistry/" target="_blank">http://ccl.northwestern.edu/curriculum/ConnectedChemistry/</a> which explores the behavior of gases.</p>
""" },
  { path: """models/Curricular Models/Connected Chemistry/Connected Chemistry 7 Ideal Gas Law.nlogo""", info: """<p>This model explores the relationship between the variables in the ideal gas law (number of particles, container volume, gas pressure, and gas temperature).  This model is part of the &ldquo;Connected Chemistry&rdquo; curriculum <a href="http://ccl.northwestern.edu/curriculum/ConnectedChemistry/" target="_blank">http://ccl.northwestern.edu/curriculum/ConnectedChemistry/</a> which explore the behavior of gases.</p>
""" },
  { path: """models/Curricular Models/Connected Chemistry/Connected Chemistry 3 Circular Particles.nlogo""", info: """<p>This model explores the relationship between particle kinetic energies during particle collisions.  This model is part of the &ldquo;Connected Chemistry&rdquo; curriculum  <a href="http://ccl.northwestern.edu/curriculum/ConnectedChemistry/" target="_blank">http://ccl.northwestern.edu/curriculum/ConnectedChemistry/</a> which explore the behavior of gases.</p>
""" },
  { path: """models/Curricular Models/Connected Chemistry/Connected Chemistry Rusting Reaction.nlogo""", info: """<p>This model simulates the behavior of oxygen gas particles in a closed container with solid iron.  It is one in a series of Connected Chemistry models, that the same basic rules for simulating the behavior of gases and chemical reactions.  Each model integrates different features in order to highlight different aspects of chemical reactions.</p>
""" },
  { path: """models/Curricular Models/Connected Chemistry/Connected Chemistry 4 Number and Pressure.nlogo""", info: """<p>This model explores the relationship between the number of gas particles and the pressure of the gas in a container with a fixed volume.  This model is part of the &ldquo;Connected Chemistry&rdquo; curriculum <a href="http://ccl.northwestern.edu/curriculum/ConnectedChemistry/" target="_blank">http://ccl.northwestern.edu/curriculum/ConnectedChemistry/</a> which explore the behavior of gases.</p>
""" },
  { path: """models/Curricular Models/Connected Chemistry/Connected Chemistry Solid Combustion.nlogo""", info: """<p>This model shows the chemical kinetics of the combustion reaction for burning charcoal.</p>
""" },
  { path: """models/Curricular Models/Connected Chemistry/Connected Chemistry 6 Volume and Pressure.nlogo""", info: """<p>This model explores the relationship between the volume of a gas container and the pressure of a gas in that container.  This model is part of the &ldquo;Connected Chemistry&rdquo; curriculum <a href="http://ccl.northwestern.edu/curriculum/ConnectedChemistry/" target="_blank">http://ccl.northwestern.edu/curriculum/ConnectedChemistry/</a> which explore the behavior of gases.</p>
""" },
  { path: """models/Curricular Models/Connected Chemistry/Connected Chemistry 1 Bike Tire.nlogo""", info: """<p>This model introduces the behavior of gas particles trapped in a fixed-volume container (such as a bike tire) or free and unbounded.  This model is part of the &ldquo;Connected Chemistry&rdquo; curriculum <a href="http://ccl.northwestern.edu/curriculum/ConnectedChemistry/" target="_blank">http://ccl.northwestern.edu/curriculum/ConnectedChemistry/</a> which explore the behavior of gases.</p>
""" },
  { path: """models/Curricular Models/Connected Chemistry/Connected Chemistry Gas Combustion.nlogo""", info: """<p>This model shows the chemical kinetics of the combustion reaction of hydrogen and oxygen gas, which is generally used in rocket engines.</p>
""" },
  { path: """models/Curricular Models/Connected Chemistry/Connected Chemistry 8 Gas Particle Sandbox.nlogo""", info: """<p>This model supports a drawing style interface for &ldquo;sketching&rdquo; up representations of new systems to explore related to gas behavior and gas particles.  This model is part of the &ldquo;Connected Chemistry&rdquo; curriculum <a href="http://ccl.northwestern.edu/curriculum/ConnectedChemistry/" target="_blank">http://ccl.northwestern.edu/curriculum/ConnectedChemistry/</a> which explores the behavior of gases.</p>
""" },
  { path: """models/Curricular Models/Connected Chemistry/Connected Chemistry Reversible Reaction.nlogo""", info: """<p>This is a model of reversible reactions, Le Chatelier&rsquo;s Principle and the Haber process (used for the manufacture of ammonia).</p>
""" },
  { path: """models/Curricular Models/Connected Chemistry/Connected Chemistry 2 Changing Pressure.nlogo""", info: """<p>This model explores the relationship between the number of gas particles in a fixed-volume container &ndash; a bike tire &ndash; and the pressure of the gas in that container. This model is part of the &ldquo;Connected Chemistry&rdquo; curriculum <a href="http://ccl.northwestern.edu/curriculum/ConnectedChemistry/" target="_blank">http://ccl.northwestern.edu/curriculum/ConnectedChemistry/</a> which explore the behavior of gases.</p>
""" },
  { path: """models/Curricular Models/Connected Chemistry/Connected Chemistry Atmosphere.nlogo""", info: """<p>In this model, a gaseous atmosphere is placed above the surface of a &ldquo;planet&rdquo;. The model explores the behavior of gas molecules that have an external force acting on them (gravity), and therefore are no longer considered an ideal gas.  This is the eighth in a sequence of models from the &ldquo;Connected Chemistry&rdquo; curriculum, exploring the behavior of gases. The Connected Chemistry curriculum was initially developed as part of the Modeling Across the Curriculum (MAC) Project: <a href="http://ccl.northwestern.edu/curriculum/mac/" target="_blank">http://ccl.northwestern.edu/curriculum/mac/</a>.</p>
""" },
  { path: """models/Curricular Models/GenEvo/GenEvo 4 Competition.nlogo""", info: """<p>This is a population model of competition between cells in a population of asexually reproducing bacteria E. coli for resources in an environment. Users can experiment with various parameters to learn more about two different mechanisms of evolution: natural selection and genetic drift.</p>
""" },
  { path: """models/Curricular Models/GenEvo/GenEvo 2 Genetic Drift.nlogo""", info: """<p>This model is an example of genetic drift in a population of asexually reproducing bacteria E. coli. It starts with several types of E. coli, each with a different type (which we represent with unique colors). The model shows that competing types of E. coli, each reproducing with equal likelihood on each turn, will ultimately converge on one type without any selection pressure forcing this convergence.  The idea, explained in more detail in Dennett&rsquo;s <em>Darwin&rsquo;s Dangerous Idea</em>, is that genetic drifts can occur without any particular purpose or &lsquo;selection pressure&rsquo;.</p>
""" },
  { path: """models/Curricular Models/GenEvo/GenEvo 3 Genetic Drift and Natural Selection.nlogo""", info: """<p>This model allows for the exploration and comparison of two different mechanisms of evolution: natural selection and genetic drift. It models evolution in a population of asexually reproducing bacteria, E. coli.</p>
""" },
  { path: """models/Curricular Models/GenEvo/Synthetic Biology - Genetic Switch.nlogo""", info: """<p>This a multi-agent model of a genetic circuit in a bacterial cell and is an extension of the GenEvo 1 model. This model shows how biologists can use laboratory techniques to tweak certain aspects of a genetic circuit in order to affect the cell&rsquo;s behavior.</p>
""" },
  { path: """models/Curricular Models/GenEvo/GenEvo 1 Genetic Switch.nlogo""", info: """<p>This model simulates a complex phenomenon in molecular biology: the “switching” (on and off) of genes depending on environmental conditions. Through molecular interactions between specific regulatory proteins and specific DNA sequences, each regulated gene is turn on or off in response to environmental stimuli.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/Bug Hunt Consumers.nlogo""", info: """<p>This model explores the stability of consumer producer ecosystems and how temporary disturbances and more sustained environmental changes affect the stability of the population and the ecosystem.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/Red Queen.nlogo""", info: """<p>This model demonstrates the ideas of competitive co-evolution. In the model there are two species:  frogs and snakes. The snakes are the only predators of the frogs, but the frogs produce a fast acting poison that kills the snakes before they can be eaten. However, the snakes have developed an anti-venom to counter the frog&rsquo;s poison. In this model, we assume that there are no other predators of the frogs, or prey that are consumed by the snakes.  As such the two species enter a biological arms race in order to keep up with each other.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/HubNet Activities/Bird Breeders HubNet.nlogo""", info: """<p>This is a model of a selective breeding program of birds.  In the scenario presented in the model the user assumes the role of a bird breeder, whose goal is to breed a line of  &ldquo;fancy&rdquo; looking birds through managing a selective breeding program with other breeders (players).</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/HubNet Activities/Critter Designers HubNet.nlogo""", info: """<p>This model simulates competition between many different species in a complex ecosystem. The outcome of the competition shows that when all individuals in a population are identical to each other, the competitive advantage of a species will continue to change compared to other species when the environmental conditions keep changing.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/HubNet Activities/Bug Hunters Competition HubNet.nlogo""", info: """<p>This model shows how competition emerges between individuals in the same population.  In a consumer / producer ecosystem, competition for shared resources emerges whenever there is a limited sappy of those resources.  Such competition may be intentional or unintentional, but similar outcomes result in either case - some individuals outcompete others for those shared resources.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/HubNet Activities/Fish Spotters HubNet.nlogo""", info: """<p>This is a HubNet activity of natural selection.  This selection model shows how the interaction of mates and predators on a population can generate two opposing pressures from natural selection. One of these pressures is from sexual selection and the other is from predation.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/DNA Protein Synthesis.nlogo""", info: """<p>This model allows you to explore the effects of deletion, substitution, and insertion mutations on a single strand of DNA and the subsequent outcomes in related protein synthesis in cells.  The model represents effects from mutations that include 1) the number of genes that are encoded in the DNA, 2) the mRNA molecules that are transcribed, and 3) the tRNA molecules that are used to transcribe the mRNA into an amino acid chain, as wells as 4) the subsequent protein that is synthesized.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/Plant Speciation.nlogo""", info: """<p>This is a model of parapatric speciation, where two subpopulations of a species split into two non-interbreeding species while still remaining in contact with each other. This is in contrast to allopatric speciation, where two geographically separated subpopulations of a species diverge into two separate species. The specific situation modeled is that of the speciation of a metal-tolerant variety of plant on the boundary between clean and contaminated ground.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/Bug Hunt Drift.nlogo""", info: """<p>This is a genetic drift model that shows how gene frequencies change in a population due to purely random events.  The effect of random selection of certain individuals in a population (either through death or through reproduction), results in the loss or gains of an allele.  Over multiple generations this shift in gene distribution leads to alleles becoming more rare or more common (or disappearing completely) in a population. This effect is called genetic drift.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/Plant Hybridization.nlogo""", info: """<p>This model lets you conduct experiments in Mendelian genetics with cross fertilization in a population of flowering plants.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/Bug Hunt Predators and Invasive Species.nlogo""", info: """<p>This model explores the stability of predator-prey ecosystems and how that stability is affected when new species are introduced into the ecosystem.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/Fish Tank Genetic Drift.nlogo""", info: """<p>This is a genetic drift model that shows how gene frequencies change in a population due to purely random events.  The effect of random selection of certain individuals in a population (either through death or through reproduction) and/or the effect of random selection as to which chromosome (from every chromosome pair) end up being sorted into each gamete (sex cells), results in the loss or gains of alleles in the population.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/DNA Replication Fork.nlogo""", info: """<p>In this model you can orchestrate the DNA replication fork process that occurs in the cells of all living creatures before cells divide.  Both mitosis and meiosis rely on this process to make copies of existing DNA before making new cells.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/Bug Hunt Coevolution.nlogo""", info: """<p>This is a natural/artificial selection model that shows the interrelationship between natural selection forces in predator and prey that results from coevolution.</p>
""" },
  { path: """models/Curricular Models/BEAGLE Evolution/Bird Breeder.nlogo""", info: """<p>This is a model of a selective breeding program of birds (or dragons).  In the scenario presented in the model the user assumes the role of a bird breeder, whose goal is breed a line of &ldquo;fancy&rdquo; looking birds or a specific type of dragon through managing a selective breeding program.</p>
""" },
  { path: """models/Curricular Models/epiDEM/epiDEM Basic.nlogo""", info: """<p>This model simulates the spread of an infectious disease in a closed population. It is an introductory model in the curricular unit called epiDEM (Epidemiology: Understanding Disease Dynamics and Emergence through Modeling). This particular model is formulated based on a mathematical model that describes the systemic dynamics of a phenomenon that emerges when one infected person is introduced in a wholly susceptible population. This basic model, in mathematical epidemiology, is known as the Kermack-McKendrick model.</p>
""" },
  { path: """models/Curricular Models/epiDEM/epiDEM Travel and Control.nlogo""", info: """<p>This model is an extension of the basic model of epiDEM (a curricular unit which stands for Epidemiology: Understanding Disease Dynamics and Emergence through Modeling). It simulates the spread of an infectious disease in a semi-closed population, but with additional features such as travel, isolation, quarantine, inoculation, and links between individuals. However, we still assume that the virus does not mutate, and that upon recovery, an individual will have perfect immunity.</p>
""" },
  { path: """models/Curricular Models/Urban Suite/Urban Suite - Recycling.nlogo""", info: """<p>This model demonstrates the relationship of agents (people) trying to sustain their natural resource of land over the course of time.  In this simplified scenario, two types of developers exist: recyclers and wastefuls.</p>
""" },
  { path: """models/Curricular Models/Urban Suite/Urban Suite - Tijuana Bordertowns.nlogo""", info: """<p>This model simulates various socio-economic realities of low-income residents of the City of Tijuana for the purpose of creating propositional design interventions.</p>
""" },
  { path: """models/Curricular Models/Urban Suite/Urban Suite - Awareness.nlogo""", info: """<p>This model simulates points of information and/or resource exchange in an urban environment. An urban environment is assumed to be a pedestrian friendly city-space where people normally encounter one another on a face-to-face basis; and, typically encounter informational systems (such as advertising) and exchange systems (such as consumer based shopping).</p>
""" },
  { path: """models/Curricular Models/Urban Suite/Urban Suite - Structure from Randomness 1.nlogo""", info: """<p>This model demonstrates the concept of &ldquo;structure from randomness&rdquo;.  In particular, it is an implementation of the model described in the book &ldquo;Cities and Complexity&rdquo; by Michael Batty, on pages 43-45.  For analysis and discussion beyond that provided with this model, the reader is encouraged to refer to this text.</p>
""" },
  { path: """models/Curricular Models/Urban Suite/Urban Suite - Cells.nlogo""", info: """<p>This is a model of 2d cellular automata.  It uses very simple rules to grow a form.  These forms may be very complex, or highly regular.</p>
""" },
  { path: """models/Curricular Models/Urban Suite/Urban Suite - Economic Disparity.nlogo""", info: """<p>This model explores residential land-usage patterns from an economic perspective, using the socio-economic status of the agents to determine their preferences for choosing a location to live.  It models the growth of two populations, one rich and one poor, who settle based on three properties of the landscape: the perceived quality, the cost of living, and the proximity to services (large red dots). These same properties then change based on where the different populations settle.</p>
""" },
  { path: """models/Curricular Models/Urban Suite/Urban Suite - Sprawl Effect.nlogo""", info: """<p>This model demonstrates a simplified version of city growth and how it leads to urban sprawl and the problems connected with it (e.g. leapfrogging).  Since the rules by which the environment changes and the agents interact are quite simple, the strength of this model is less in attempting to realistically model urban development in detail, and more in demonstrating that certain patterns of behavior and land usage can emerge without requiring overly-complex rules.</p>
""" },
  { path: """models/Curricular Models/Urban Suite/Urban Suite - Positive Feedback.nlogo""", info: """<p>This model demonstrates the effect of &ldquo;positive feedback&rdquo;.  In particular, it is an implementation of the model described in the book &ldquo;Cities and Complexity&rdquo; by Michael Batty, on pages 38-42.  For analysis and discussion beyond that provided with this model, the reader is encouraged to refer to this text.</p>
""" },
  { path: """models/Curricular Models/Urban Suite/Urban Suite - Pollution.nlogo""", info: """<p>This model is an examination of the fragile equilibrium of a predator-prey ecosystem. Populations of (1) people, (2) landscape elements and (3) swarms of airborne pollutant-agents compete for resources within an enclosed environment. Using this model, one can explore the behavior of the populations over time as they dynamically interact: the predators (pollution) and prey (people) can be compared over multiple generations as their populations demonstrate regular or irregular reproductive success.</p>
""" },
  { path: """models/Curricular Models/Urban Suite/Urban Suite - Structure from Randomness 2.nlogo""", info: """<p>This is another model that demonstrates the concept of &ldquo;structure from randomness&rdquo;.  In particular, it is an implementation of the model described in the book &ldquo;Cities and Complexity&rdquo; by Michael Batty, on pages 45-47.  For analysis and discussion beyond that provided with this model, the reader is encouraged to refer to this text.</p>
""" },
  { path: """models/Curricular Models/Urban Suite/Urban Suite - Path Dependence.nlogo""", info: """<p>This model explores the concept of path dependence as explained by W. Brian Arthur in his paper, &ldquo;Urban Systems and Path Dependence&rdquo; and several other of his papers.  Essentially firms walk around a landscape looking for a place to settle.  Several mechanisms of how they decide where to locate can be simulated, and the results examined.</p>
""" },
  { path: """models/Curricular Models/Mind the Gap/MTG 2 Random Assignment HubNet.nlogo""", info: """<p>This HubNet model is the second model of the MTG series. Mind the Gap (MTG) is a curricular unit revolving around a series of three agent-based participatory simulations (ABPSs). The goal of the MTG curricular unit is to help high school students understand important mechanisms of wealth inequality in the U.S. through the lens of complex systems with NetLogo HubNet-based participatory activities. For more details about the unit, refer to Mind the Gap 1 Equal Opportunities HubNet Model&ndash;the first model of the MTG series.</p>
""" },
  { path: """models/Curricular Models/Mind the Gap/MTG 3 Feedback Loop HubNet.nlogo""", info: """<p>This HubNet model is the third model of the MTG series. Mind the Gap (MTG) is a curricular unit revolving around a series of three agent-based participatory simulations (ABPSs). The goal of the MTG curricular unit is to help high school students understand important mechanisms of wealth inequality in the U.S. through the lens of complex systems with NetLogo HubNet-based participatory activities. For more details about the unit, refer to Mind the Gap 1 Equal Opportunities HubNet Model&ndash;the first model of the MTG series.</p>
""" },
  { path: """models/Curricular Models/Mind the Gap/MTG 1 Equal Opportunities HubNet.nlogo""", info: """<p>Mind the Gap (MTG) is a curricular unit revolving around a series of three agent-based participatory simulations (ABPSs). The goal of the MTG curricular unit is to help high school students understand important mechanisms of wealth inequality in the U.S., through the lens of complex systems with NetLogo HubNet-based participatory activities.</p>
""" },
  { path: """models/Code Examples/Box Drawing Example.nlogo""", info: """<p>This example sets up a box that can be placed anywhere in the world.  It is one patch thick.</p>
""" },
  { path: """models/Code Examples/Breed Procedures Example.nlogo""", info: """<p>This shows how to use the <code>run</code> command to give different breeds different definitions of the &ldquo;same&rdquo; procedure.</p>
""" },
  { path: """models/Code Examples/Halo Example.nlogo""", info: """<p>This example shows how to give a turtle a &ldquo;halo&rdquo;, to make it stand out.  The halo travels with the turtle.</p>
""" },
  { path: """models/Code Examples/Mouse Recording Example.nlogo""", info: """<p>This is a demo presenting how to record and retrace movements of the mouse.  When the &ldquo;go&rdquo; button is pressed, the user can draw one or more lines with the mouse by clicking and dragging the mouse around the view.  Each set of drawn lines becomes a path along which a turtle travels, back and forth.</p>
""" },
  { path: """models/Code Examples/Network Import Example.nlogo""", info: """<p>The code example provides an illustration of how to import network data from external files.  This is useful when you have a specific network, perhaps created in another program or taken from real world data, that you would like to recreate in NetLogo.</p>
""" },
  { path: """models/Code Examples/File Input Example.nlogo""", info: """<p>This code example shows how to read in information from a file directly from NetLogo code.</p>
""" },
  { path: """models/Code Examples/Next Patch Example.nlogo""", info: """<p>This code example demonstrates how to find out what patch a turtle would cross into next if it were to move forward continuously.</p>
""" },
  { path: """models/Code Examples/Shape Animation Example.nlogo""", info: """<p>This code example shows how to use shapes to create animations.  In this example, there is a walking person and growing flowers.</p>
""" },
  { path: """models/Code Examples/Plot Smoothing Example.nlogo""", info: """<p>This code example shows you how to plot a &ldquo;smoothed&rdquo; version of a jagged line.  When you run the model, the black line is the original line, and the blue line is the smoothed version.</p>
""" },
  { path: """models/Code Examples/Histogram Example.nlogo""", info: """<p>This shows all of the code needed to create a histogram.</p>
""" },
  { path: """models/Code Examples/Breeds and Shapes Example.nlogo""", info: """<p>This code example shows how to create and control groups of turtles, i.e. breeds.</p>
""" },
  { path: """models/Code Examples/Neighborhoods Example.nlogo""", info: """<p>This code example shows how to use the basic neighborhood primitives.  These include <code>neighbors</code>, <code>neighbors4</code>, <code>in-radius</code>, and <code>at-points</code>:</p>
""" },
  { path: """models/Code Examples/Communication-T-T Example.nlogo""", info: """<p>This code example is a simple demo of turtle-turtle communications. We create 500 turtles. One turtle starts out with a message (the red turtle) and she spreads the message to other turtles.</p>
""" },
  { path: """models/Code Examples/Diffuse Off Edges Example.nlogo""", info: """<p>Normally, the <code>diffuse</code> command diffuses the value of a variable over all of the patches equally.  The total value of the variable across all patches remains constant.  If wrapping is off, nothing special happens at the edge of the world.  This code example shows to make the value disappear at or &ldquo;fall off&rdquo; the edges of the world.</p>
""" },
  { path: """models/Code Examples/Communication-T-P Example.nlogo""", info: """<p>This code example demonstrates Turtle-Patch communication. When a red turtle moves onto a patch, it turns the patch black.  When a yellow turtle moves onto a patch, it turns the patch magenta.</p>
""" },
  { path: """models/Code Examples/Mouse Drag Multiple Example.nlogo""", info: """<p>This is an example of how to use the mouse to select and drag multiple turtles.</p>
""" },
  { path: """models/Code Examples/Case Conversion Example.nlogo""", info: """<p>NetLogo doesn&rsquo;t have primitives for converting upper to lower case, or vice versa.  This example includes procedures that accomplish these tasks.</p>
""" },
  { path: """models/Code Examples/Link Breeds Example.nlogo""", info: """<p>This code example shows how to create different kinds of links using link breeds.</p>
""" },
  { path: """models/Code Examples/Color Chart Example.nlogo""", info: """<p>This model was used to generate the color chart in the NetLogo User Manual.</p>
""" },
  { path: """models/Code Examples/Mouse Drag One Example.nlogo""", info: """<p>This is a code sample illustrating how to let the user drag turtles around with the mouse.</p>
""" },
  { path: """models/Code Examples/One Turtle Per Patch Example.nlogo""", info: """<p>In some models, you want to allow only one turtle per patch.  This example demonstrates a few different techniques for achieving this.  This code example includes three strategies for moving turtles around while keeping the one turtle per patch satisfied.</p>
""" },
  { path: """models/Code Examples/Vision Cone Example.nlogo""", info: """<p>This example demonstrates how to give a turtle a &ldquo;cone of vision&rdquo; in front of it.  It uses the <code>in-cone</code> primitive to filter an agentset according to whether the turtles or patches in it are in the calling turtle&rsquo;s cone of vision.</p>
""" },
  { path: """models/Code Examples/Mobile Aggregation Example.nlogo""", info: """<p>This is a code example showing how to make clusters of turtles that move as a unit.  In this example, whenever two turtles touch, their clusters merge.</p>
""" },
  { path: """models/Code Examples/3D Shapes Example.nlogo""", info: """<p>This code example shows the 3D shapes available in NetLogo.</p>
""" },
  { path: """models/Code Examples/Mouse Example.nlogo""", info: """<p>This demo shows how to use the <code>mouse-down?</code>, <code>mouse-xcor</code>, and <code>mouse-ycor</code> reporters to make a model that the user can interact with using the mouse.  It also demonstrates the difference between using patches and turtles to achieve a desired effect.</p>
""" },
  { path: """models/Code Examples/Line of Sight Example.nlogo""", info: """<p>On a perfectly flat landscape, you can see all the way to the horizon. But if the landscape has hills, your view of some of the land in front of you may be blocked.  This code example shows how to simulate this using turtles moving over a patch landscape of varying elevation.</p>
""" },
  { path: """models/Code Examples/Random Network Example.nlogo""", info: """<p>This shows how to create two different kinds of random networks.  In an Erdos-Renyi network, each possible link is given a fixed probability of being created.  In a simple random network, a fixed number of links are created between random nodes.</p>
""" },
  { path: """models/Code Examples/User Interaction Example.nlogo""", info: """<p>This demonstrates the usage of NetLogo&rsquo;s user interaction primitives, all of which begin with <code>user-</code>.  They let a model pop up a dialog box showing information to, or requesting information from, the model user.</p>
""" },
  { path: """models/Code Examples/File Output Example.nlogo""", info: """<p>This code example shows how to output information to an outside file directly from NetLogo code.  All the data is written in human readable form using <code>file-print</code>.</p>
""" },
  { path: """models/Code Examples/Hex Turtles Example.nlogo""", info: """<p>This demonstrates how to have turtles move on a hexagonal lattice instead of NetLogo&rsquo;s usual square lattice.</p>
""" },
  { path: """models/Code Examples/HSB and RGB Example.nlogo""", info: """<p>This is a simple example of NetLogo colors versus RGB colors using <code>approximate-rgb</code> and <code>approximate-hsb</code>, and <code>hsb</code>.</p>
""" },
  { path: """models/Code Examples/Move Towards Target Example.nlogo""", info: """<p>This code example demonstrates how to have a turtle approach a target location a step at a time.</p>
""" },
  { path: """models/Code Examples/Random Grid Walk Example.nlogo""", info: """<p>This code example is a demo of a basic random walk, constrained to lie on a grid.  At each step, the yellow turtle changes its heading randomly, but always in multiples of 90, so the turtle is always facing due north, east, south, or west.  At each step, the turtle always lands on the center of a patch.</p>
""" },
  { path: """models/Code Examples/Perspective Example.nlogo""", info: """<p>This model shows how to see the world from different perspectives.  It demonstrates the <code>follow</code>, <code>watch</code>, and <code>reset-perspective</code> commands.</p>
""" },
  { path: """models/Code Examples/Transparency Example.nlogo""", info: """<p>This example demonstrates transparency in NetLogo.</p>
""" },
  { path: """models/Code Examples/Lottery Example.nlogo""", info: """<p>NetLogo makes it easy to make a random choice where every outcome is equally likely. But what if you want different outcomes to have different chances of being chosen&hellip;?</p>
""" },
  { path: """models/Code Examples/Fully Connected Network Example.nlogo""", info: """<p>This example shows how to make a fully connected network, that is, a network in which every node is linked to every other node.</p>
""" },
  { path: """models/Code Examples/Rolling Plot Example.nlogo""", info: """<p>This shows how to make a &ldquo;rolling&rdquo; plot, in which only the last n time steps of data are displayed.</p>
""" },
  { path: """models/Code Examples/Grouping Turtles Example.nlogo""", info: """<p>This example demonstrates two different methods for dividing an arbitrary number of turtles into groups, either by desired group size, or by desired number of groups.</p>
""" },
  { path: """models/Code Examples/Circular Path Example.nlogo""", info: """<p>This shows how to make turtles move along a perfect circle. The first procedure moves turtles based a user-defined distance to be travelled; the second moves then based on a user-defined degree measure.</p>
""" },
  { path: """models/Code Examples/Ask-Concurrent Example.nlogo""", info: """<p>This example demonstrates the difference between the <code>ask</code> and <code>ask-concurrent</code> commands.</p>
""" },
  { path: """models/Code Examples/Lattice-Walking Turtles Example.nlogo""", info: """<p>This example demonstrates how to create a hexagonal grid for turtles to walk around on using links.</p>
""" },
  { path: """models/Code Examples/Partners Example.nlogo""", info: """<p>This code example shows how agents can &ldquo;partner up&rdquo; with each other.  Each turtle will pair up with another turtle.  Each turtle in a pair are aware of this partnership, preventing mismatched partners and multiple partners.</p>
""" },
  { path: """models/Code Examples/Hex Cells Example.nlogo""", info: """<p>This demonstrates how to make a model that uses a hexagonal grid of cells.</p>
""" },
  { path: """models/Code Examples/Look Ahead Example.nlogo""", info: """<p>This code example shows how to have turtles look ahead before they move.  By looking ahead, a turtle can determine what is in front of it and take a particular action.  Looking ahead is most appropriate in situations where the turtle is not supposed to go &ldquo;on top of&rdquo; certain agents.  This can be extremely useful for something like barriers or walls, which the turtle shouldn&rsquo;t move through.</p>
""" },
  { path: """models/Code Examples/State Machine Example.nlogo""", info: """<p>This shows how to make your turtles into &ldquo;state machines&rdquo; using a turtle variable and the RUN command.   A state machine consists of a collection of states with a different action associated with each state.  The model itself is an alternate version of the Termites model located in the Biology section of Sample Models.</p>
""" },
  { path: """models/Code Examples/Link-Walking Turtles Example.nlogo""", info: """<p>This example shows how to make turtles &ldquo;walk&rdquo; from node to node on a network, by following links.</p>
""" },
  { path: """models/Code Examples/Ask Ordering Example.nlogo""", info: """<p>Agentsets in NetLogo are always in random order.  This code example demonstrates that visually.  It also shows how to make the turtles execute in a particular order if you want.</p>
""" },
  { path: """models/Code Examples/Label Position Example.nlogo""", info: """<p>This example demonstrates a means of using the TIE command to make turtle labels you can position how you want them.</p>
""" },
  { path: """models/Code Examples/Plotting Example.nlogo""", info: """<p>This shows all of the code needed to set up a plot which will display two variables as the model runs.  In this case, the two variables are the x-coordinate and the y-coordinate of a turtle.</p>
""" },
  { path: """models/Code Examples/Many Regions Example.nlogo""", info: """<p>This example shows how to divide the world in a variable number of regions and keep turtles confined to the region they start in.</p>
""" },
  { path: """models/Code Examples/Hill Climbing Example.nlogo""", info: """<p>This example shows how to make turtles climb hills &ndash; or descend into valleys &ndash; using the <code>uphill</code>, <code>uphill4</code>, <code>downhill</code>, and <code>downhill4</code> commands.  The same technique is useful for modeling any kind of creature that follows a gradient in its environment.</p>
""" },
  { path: """models/Code Examples/Patch Coordinates Example.nlogo""", info: """<p>The turtle goes forward &ldquo;distance-of-travel&rdquo; and returns to (start-x, start-y). The green patch is the center patch upon which there is a turtle at (start-x, start-y), and the patch &ldquo;distance-of-travel&rdquo; away from that center will flash as the turtle passes through it.</p>
""" },
  { path: """models/Code Examples/Patch Clusters Example.nlogo""", info: """<p>This example shows how to identify contiguous &ldquo;clusters&rdquo; of patches.</p>
""" },
  { path: """models/Code Examples/Hatch Example.nlogo""", info: """<p>This code example demonstrates the <code>hatch</code> command.</p>
""" },
  { path: """models/Code Examples/Link Lattice Example.nlogo""", info: """<p>This example shows how to construct a regular lattice or mesh of links.  Two kinds of lattice are demonstrated, a square lattice (where each node has four neighbors) and a hex lattice (where each node has six neighbors).</p>
""" },
  { path: """models/Code Examples/Moore & Von Neumann Example.nlogo""", info: """<p>This model shows how to make Moore (square) and Von Neumann (diamond) neighborhoods of any radius.  The built-in primitive <code>neighbors</code> gives you a Moore neighborhood of radius 1, and the built-in primitive <code>neighbors4</code> gives you a Von Neumann neighborhood of radius 1, but for other radii you have to use the code like that given here.</p>
""" },
  { path: """models/Code Examples/Wall Following Example.nlogo""", info: """<p>The turtles in this example follow walls made out of colored patches.  Some turtles try to keep the wall on their right; others keep the wall on their left.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/vid/Video Camera Example.nlogo""", info: """<p>This example demonstrates how to use the <code>bitmap</code> and <code>vid</code> extensions to capture frames from a video camera into NetLogo.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/vid/Movie Recording Example.nlogo""", info: """<p>This shows how to capture a movie of your model with the <code>vid</code> extension.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/vid/Movie Playing Example.nlogo""", info: """<p>This example demonstrates how to use the <code>bitmap</code> and <code>vid</code> extensions to view video files and import frames into NetLogo.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/view2.5d/2.5d Patch View Example.nlogo""", info: """<p>This example demonstrates the use of the <code>view2.5d</code> extension. It is based on the <strong>Hill Climbing Example</strong> model, which shows how to make turtles climb hills using the <code>uphill</code> command. The <code>view2.5d</code> extension allows much better visualization of the &ldquo;hills&rdquo; generated in the example.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/rnd/Rnd Example.nlogo""", info: """<p>This example demonstrates the use of the <code>rnd</code> extension to do weighted random selection.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/table/Table Example.nlogo""", info: """<p>This model demonstrates basic usage of the table extension.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/csv/CSV Example.nlogo""", info: """<p>This model shows how to use NetLogo&rsquo;s <code>csv</code> extension to load data from and write data to data to CSV files. This allows users to easily output data (e.g. value of turtle variables, result of calculations, etc.) to a standard CSV file.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/nw/NW General Examples.nlogo""", info: """<p>This model demonstrates various features of the Netlogo NW extension: it allows you to generate various kinds of networks, lay them out on screen, and get information about them.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/profiler/Profiler Example.nlogo""", info: """<p>This code example demonstrates the functionality of the profiler extension, which records the number of times user-defined procedures are called, and how long they take to run.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/ls/Parent Model Example.nlogo""", info: """<p>This is an example of how to use LevelSpace to run many models concurrently.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/ls/Model Interactions Example.nlogo""", info: """<p>This is a code example for showing interactions between models in a LevelSpace model system. It shows how the temperature in the Climate Change model can be programmed to influence the grass regrowth time in the Wolf Sheep Predation model.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/ls/Model Visualizer and Plotter Example.nlogo""", info: """<p>This code example shows two different ways of visualizing data from LevelSpace child models with a parent model:</p>
""" },
  { path: """models/Code Examples/Extensions Examples/sound/Beatbox.nlogo""", info: """<p>This is a drum machine made with NetLogo.  It uses the sound extension.  You can make your own beats with it.  Beats can be saved to disk and then loaded back in later.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/sound/Sound Workbench.nlogo""", info: """<p>This model demonstrates the capabilities of the sound extension. It allows modelers to experiment with different instruments.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/sound/GasLab With Sound.nlogo""", info: """<p>This model is included here in &ldquo;Code Examples&rdquo; as an example of taking an existing model and adding sound to it.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/sound/Musical Phrase Example.nlogo""", info: """<p>This code example shows how <code>sound:play-note-later</code> can be used to play a musical phrase without using <code>sound:start-note</code> and <code>sound:stop-note</code>.  This allows the model to continue running while the musical phrase plays.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/sound/Composer.nlogo""", info: """<p>Composer is a toy model that lets you write songs and play them using the sound extension.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/sound/Percussion Workbench.nlogo""", info: """<p>This model demonstrates the capabilities of the sound extension. It allows modelers to experiment with different drums.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/gogo/GoGoMonitor.nlogo""", info: """<p>This model communicates with the sensors and output ports of a <a href="http://gogoboard.org" target="_blank">GoGo Board</a>, an open source, easy-to-build, low cost, general purpose circuit board designed for educational projects.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/gogo/GoGoMonitorSimple.nlogo""", info: """<p>This simple model communicates with the sensors and output ports of a GoGo Board, an open source, easy-to-build, low cost, general purpose circuit board designed for educational projects. It uses the <a href="https://github.com/NetLogo/GoGo-HID-Extension" target="_blank"><code>gogo</code> extension</a>, which interfaces with GoGo boards running Human Interface Driver (HID) firmware.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/matrix/Matrix Example.nlogo""", info: """<p>This model demonstrates basic usage of the matrix extension.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/gis/GIS Gradient Example.nlogo""", info: """<p>This model was built to test and demonstrate the functionality of the GIS NetLogo extension. It simulates raindrops flowing downhill over the Earth&rsquo;s surface.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/gis/GIS General Examples.nlogo""", info: """<p>This model was built to test and demonstrate the functionality of the GIS NetLogo extension.</p>
""" },
  { path: """models/Code Examples/Extensions Examples/palette/Palette Example.nlogo""", info: """<p>This model demonstrates basic usage of the <code>palette</code> extension.</p>
""" },
  { path: """models/Code Examples/Intersecting Links Example.nlogo""", info: """<p>This code example shows how to determine if two links intersect.</p>
""" },
  { path: """models/Code Examples/Perspective Demos/GasLab Gas in a Box (Perspective Demo).nlogo""", info: """<p>This is a version of the GasLab Gas in a Box model, modified to show off NetLogo&rsquo;s perspective features. Try it in both 2D and 3D.</p>
""" },
  { path: """models/Code Examples/Perspective Demos/Flocking (Perspective Demo).nlogo""", info: """<p>This is a version of the Flocking model, modified to show off NetLogo&rsquo;s perspective features. Try it in both 2D and 3D.</p>
""" },
  { path: """models/Code Examples/Perspective Demos/Termites (Perspective Demo).nlogo""", info: """<p>This is a version of the Termites model, modified to show off NetLogo&rsquo;s perspective features. Try it in both 2D and 3D.</p>
""" },
  { path: """models/Code Examples/Perspective Demos/Ants (Perspective Demo).nlogo""", info: """<p>This is a version of the Ants model, modified to show off NetLogo&rsquo;s perspective features. Try it in both 2D and 3D.</p>
""" },
  { path: """models/Code Examples/Image Import Example.nlogo""", info: """<p>This code example shows how to use, and the differences between, the <code>import-pcolors</code>, <code>import-drawing</code>, and <code>import-pcolors-rgb</code> primitives.</p>
""" },
  { path: """models/Code Examples/Info Tab Example.nlogo""", info: """<p>This model shows you how to use the Info tab.</p>
""" },
  { path: """models/Code Examples/Tie System Example.nlogo""", info: """<p>This example shows how to build a simple solar system using the <code>tie</code> command. You can explore the motion of the different heavenly bodies independently and combined.</p>
""" },
  { path: """models/Code Examples/Plot Axis Example.nlogo""", info: """<p>This example shows how to draw an axis line on a plot.</p>
""" },
  { path: """models/Code Examples/Scale-color Example.nlogo""", info: """<p>This code example demonstrates the <code>scale-color</code> reporter.  As a turtle&rsquo;s x-coordinate becomes larger, the turtle acquires a brighter color. Similarly, as a turtle&rsquo;s x coordinate becomes smaller, the turtle acquires a darker shade.  The center of the world is (0, 0).</p>
""" },
  { path: """models/Code Examples/Myself Example.nlogo""", info: """<p>This model demonstrates several possible kinds of uses for the <code>myself</code> primitive.</p>
""" },
  { path: """models/Code Examples/Random Seed Example.nlogo""", info: """<p>This model shows how to use random seeds to create reproducible model runs.</p>
""" },
  { path: """models/Code Examples/Random Walk Example.nlogo""", info: """<p>This code example is a demo of a basic random walk.  At each step, the yellow turtle changes its heading randomly.</p>
""" },
  { path: """models/Code Examples/Intersecting Lines Example.nlogo""", info: """<p>This shows how to determine whether line segments cross, and if they do, where.</p>
""" },
  { path: """models/Code Examples/Network Example.nlogo""", info: """<p>This example demonstrates how to make a network in NetLogo.  The network consists of a collection of nodes, some of which are connected by links.</p>
""" },
  { path: """models/Code Examples/Bounce Example.nlogo""", info: """<p>This demo shows how to make turtles bounce off the walls.</p>
""" },
  { path: """models/Code Examples/Scatter Example.nlogo""", info: """<p>This code example shows three ways to scatter turtles across the world.  One way scatters them evenly across the world.  The second way scatters them in a circle.  The third puts them on the center of random patches.</p>
""" },
  { path: """models/Code Examples/Tutorial 3.nlogo""", info: """<p>The construction of this model is described in Tutorial 3 in the NetLogo User Manual.</p>
""" },
]
